{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/contact-edit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/contact-edit/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Field from '../field';\nimport VanButton from '../button';\nimport Dialog from '../dialog';\nimport Toast from '../toast';\nimport validateMobile from '../utils/validate/mobile';\nimport create from '../utils/create';\n\nconst defaultContact = {\n  id: '',\n  tel: '',\n  name: ''\n};\n\nexport default create({\n  name: 'contact-edit',\n\n  components: {\n    Field,\n    VanButton\n  },\n\n  props: {\n    isEdit: Boolean,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    contactInfo: {\n      type: Object,\n      default: () => ({ ...defaultContact })\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n\n  data() {\n    return {\n      data: {\n        ...this.defaultContact,\n        ...this.contactInfo\n      },\n      errorInfo: {\n        name: false,\n        tel: false\n      }\n    };\n  },\n\n  watch: {\n    contactInfo(val) {\n      this.data = val;\n    }\n  },\n\n  methods: {\n    onFocus(key) {\n      this.errorInfo[key] = false;\n    },\n\n    getErrorMessageByKey(key) {\n      const value = this.data[key].trim();\n      switch (key) {\n        case 'name':\n          return value ? '' : this.$t('nameEmpty');\n        case 'tel':\n          return this.telValidator(value) ? '' : this.$t('telInvalid');\n      }\n    },\n\n    onSave() {\n      const isValid = ['name', 'tel'].every(item => {\n        const msg = this.getErrorMessageByKey(item);\n        if (msg) {\n          this.errorInfo[item] = true;\n          Toast(msg);\n        }\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n\n    onDelete() {\n      Dialog.confirm({\n        message: this.$t('confirmDelete')\n      }).then(() => {\n        this.$emit('delete', this.data);\n      });\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/contact-edit","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <cell-group>\n      <field\n        v-model=\"data.name\"\n        maxlength=\"30\"\n        :label=\"$t('name')\"\n        :placeholder=\"$t('nameEmpty')\"\n        :error=\"errorInfo.name\"\n        @focus=\"onFocus('name')\"\n      />\n      <field\n        v-model=\"data.tel\"\n        type=\"tel\"\n        :label=\"$t('tel')\"\n        :placeholder=\"$t('telEmpty')\"\n        :error=\"errorInfo.tel\"\n        @focus=\"onFocus('tel')\"\n      />\n    </cell-group>\n    <div :class=\"b('buttons')\">\n      <x-button block :loading=\"isSaving\" @click=\"onSave\" type=\"danger\">{{ $t('save') }}</x-button>\n      <x-button block :loading=\"isDeleting\" @click=\"onDelete\" v-if=\"isEdit\">{{ $t('delete') }}</x-button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Field from '../field';\nimport VanButton from '../button';\nimport Dialog from '../dialog';\nimport Toast from '../toast';\nimport validateMobile from '../utils/validate/mobile';\nimport create from '../utils/create';\n\nconst defaultContact = {\n  id: '',\n  tel: '',\n  name: ''\n};\n\nexport default create({\n  name: 'contact-edit',\n\n  components: {\n    Field,\n    VanButton\n  },\n\n  props: {\n    isEdit: Boolean,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    contactInfo: {\n      type: Object,\n      default: () => ({ ...defaultContact })\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n\n  data() {\n    return {\n      data: {\n        ...this.defaultContact,\n        ...this.contactInfo\n      },\n      errorInfo: {\n        name: false,\n        tel: false\n      }\n    };\n  },\n\n  watch: {\n    contactInfo(val) {\n      this.data = val;\n    }\n  },\n\n  methods: {\n    onFocus(key) {\n      this.errorInfo[key] = false;\n    },\n\n    getErrorMessageByKey(key) {\n      const value = this.data[key].trim();\n      switch (key) {\n        case 'name':\n          return value ? '' : this.$t('nameEmpty');\n        case 'tel':\n          return this.telValidator(value) ? '' : this.$t('telInvalid');\n      }\n    },\n\n    onSave() {\n      const isValid = ['name', 'tel'].every(item => {\n        const msg = this.getErrorMessageByKey(item);\n        if (msg) {\n          this.errorInfo[item] = true;\n          Toast(msg);\n        }\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n\n    onDelete() {\n      Dialog.confirm({\n        message: this.$t('confirmDelete')\n      }).then(() => {\n        this.$emit('delete', this.data);\n      });\n    }\n  }\n});\n</script>\n"]}]}