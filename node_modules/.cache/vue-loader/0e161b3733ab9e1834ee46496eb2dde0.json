{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/coupon-list/Item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/coupon-list/Item.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\nimport Checkbox from '../checkbox';\n\nexport default create({\n  name: 'coupon-item',\n\n  props: {\n    data: Object,\n    chosen: Boolean,\n    disabled: Boolean\n  },\n\n  components: {\n    Checkbox\n  },\n\n  computed: {\n    validPeriod() {\n      return `${this.$t('valid')}：${this.getDate(this.data.startAt)} - ${this.getDate(this.data.endAt)}`;\n    },\n\n    faceAmount() {\n      return this.data.denominations !== 0\n        ? `<span>¥</span> ${this.formatAmount(this.data.denominations)}`\n        : this.data.discount !== 0\n          ? this.formatDiscount(this.data.discount)\n          : '';\n    },\n\n    conditionMessage() {\n      let condition = this.data.originCondition;\n      condition = condition % 100 === 0 ? Math.round(condition / 100) : (condition / 100).toFixed(2);\n      return this.data.originCondition === 0 ? this.$t('unlimited') : this.$t('condition', condition);\n    }\n  },\n\n  methods: {\n    getDate(timeStamp) {\n      const date = new Date(timeStamp * 1000);\n      return `${date.getFullYear()}.${this.padZero(date.getMonth() + 1)}.${this.padZero(date.getDate())}`;\n    },\n\n    padZero(num) {\n      return (num < 10 ? '0' : '') + num;\n    },\n\n    formatDiscount(discount) {\n      return this.$t('discount', `${(discount / 10).toFixed(discount % 10 === 0 ? 0 : 1)}`);\n    },\n\n    formatAmount(amount) {\n      return (amount / 100).toFixed(amount % 100 === 0 ? 0 : amount % 10 === 0 ? 1 : 2);\n    }\n  }\n});\n",{"version":3,"sources":["Item.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Item.vue","sourceRoot":"node_modules/healen-x-ui/packages/coupon-list","sourcesContent":["<template>\n  <div :class=\"b({ disabled })\">\n    <div :class=\"b('content')\">\n      <div :class=\"b('head')\">\n        <h2 v-html=\"faceAmount\" />\n        <p>{{ conditionMessage }}</p>\n      </div>\n      <div :class=\"b('body')\">\n        <h2>{{ data.name }}</h2>\n        <p>{{ validPeriod }}</p>\n        <checkbox v-if=\"chosen\" :class=\"b('corner')\" :value=\"true\" />\n      </div>\n    </div>\n    <p v-if=\"disabled && data.reason\" :class=\"b('reason')\">{{ data.reason }}</p>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Checkbox from '../checkbox';\n\nexport default create({\n  name: 'coupon-item',\n\n  props: {\n    data: Object,\n    chosen: Boolean,\n    disabled: Boolean\n  },\n\n  components: {\n    Checkbox\n  },\n\n  computed: {\n    validPeriod() {\n      return `${this.$t('valid')}：${this.getDate(this.data.startAt)} - ${this.getDate(this.data.endAt)}`;\n    },\n\n    faceAmount() {\n      return this.data.denominations !== 0\n        ? `<span>¥</span> ${this.formatAmount(this.data.denominations)}`\n        : this.data.discount !== 0\n          ? this.formatDiscount(this.data.discount)\n          : '';\n    },\n\n    conditionMessage() {\n      let condition = this.data.originCondition;\n      condition = condition % 100 === 0 ? Math.round(condition / 100) : (condition / 100).toFixed(2);\n      return this.data.originCondition === 0 ? this.$t('unlimited') : this.$t('condition', condition);\n    }\n  },\n\n  methods: {\n    getDate(timeStamp) {\n      const date = new Date(timeStamp * 1000);\n      return `${date.getFullYear()}.${this.padZero(date.getMonth() + 1)}.${this.padZero(date.getDate())}`;\n    },\n\n    padZero(num) {\n      return (num < 10 ? '0' : '') + num;\n    },\n\n    formatDiscount(discount) {\n      return this.$t('discount', `${(discount / 10).toFixed(discount % 10 === 0 ? 0 : 1)}`);\n    },\n\n    formatAmount(amount) {\n      return (amount / 100).toFixed(amount % 100 === 0 ? 0 : amount % 10 === 0 ? 1 : 2);\n    }\n  }\n});\n</script>\n"]}]}