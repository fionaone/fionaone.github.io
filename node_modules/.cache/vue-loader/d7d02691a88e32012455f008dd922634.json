{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tabbar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tabbar/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\n\nexport default create({\n  name: 'tabbar',\n\n  data() {\n    return {\n      items: []\n    };\n  },\n\n  props: {\n    value: Number,\n    fixed: {\n      type: Boolean,\n      default: true\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        zIndex: this.zIndex\n      };\n    }\n  },\n\n  watch: {\n    items() {\n      this.setActiveItem();\n    },\n\n    value() {\n      this.setActiveItem();\n    }\n  },\n\n  methods: {\n    setActiveItem() {\n      this.items.forEach((item, index) => {\n        item.active = index === this.value;\n      });\n    },\n\n    onChange(active) {\n      if (active !== this.value) {\n        this.$emit('input', active);\n        this.$emit('change', active);\n      }\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/tabbar","sourcesContent":["<template>\n  <div\n    class=\"van-hairline--top-bottom\"\n    :class=\"b({ fixed })\"\n    :style=\"style\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'tabbar',\n\n  data() {\n    return {\n      items: []\n    };\n  },\n\n  props: {\n    value: Number,\n    fixed: {\n      type: Boolean,\n      default: true\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        zIndex: this.zIndex\n      };\n    }\n  },\n\n  watch: {\n    items() {\n      this.setActiveItem();\n    },\n\n    value() {\n      this.setActiveItem();\n    }\n  },\n\n  methods: {\n    setActiveItem() {\n      this.items.forEach((item, index) => {\n        item.active = index === this.value;\n      });\n    },\n\n    onChange(active) {\n      if (active !== this.value) {\n        this.$emit('input', active);\n        this.$emit('change', active);\n      }\n    }\n  }\n});\n</script>\n"]}]}