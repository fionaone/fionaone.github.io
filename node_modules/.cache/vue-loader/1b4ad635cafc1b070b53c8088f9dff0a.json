{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/collapse-item/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/collapse-item/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { raf } from '../utils/raf';\nimport create from '../utils/create';\nimport findParent from '../mixins/find-parent';\n\nexport default create({\n  name: 'collapse-item',\n\n  mixins: [findParent],\n\n  props: {\n    name: [String, Number],\n    icon: String,\n    label: String,\n    title: [String, Number],\n    value: [String, Number],\n    disabled: Boolean,\n    border: {\n      type: Boolean,\n      default: true\n    },\n    isLink: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      show: null,\n      inited: null\n    };\n  },\n\n  computed: {\n    items() {\n      return this.parent.items;\n    },\n\n    index() {\n      return this.items.indexOf(this);\n    },\n\n    currentName() {\n      return this.isDef(this.name) ? this.name : this.index;\n    },\n\n    expanded() {\n      if (!this.parent) {\n        return null;\n      }\n\n      const { value } = this.parent;\n      return this.parent.accordion\n        ? value === this.currentName\n        : value.some(name => name === this.currentName);\n    }\n  },\n\n  created() {\n    this.findParent('x-collapse');\n    this.items.push(this);\n    this.show = this.expanded;\n    this.inited = this.expanded;\n  },\n\n  destroyed() {\n    this.items.splice(this.index, 1);\n  },\n\n  watch: {\n    expanded(expanded, prev) {\n      if (prev === null) {\n        return;\n      }\n\n      if (expanded) {\n        this.show = true;\n        this.inited = true;\n      }\n\n      this.$nextTick(() => {\n        const { content, wrapper } = this.$refs;\n        if (!content || !wrapper) {\n          return;\n        }\n\n        const contentHeight = content.clientHeight + 'px';\n        wrapper.style.height = expanded ? 0 : contentHeight;\n        raf(() => {\n          wrapper.style.height = expanded ? contentHeight : 0;\n        });\n      });\n    }\n  },\n\n  methods: {\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      const { parent } = this;\n      const name = parent.accordion && this.currentName === parent.value ? '' : this.currentName;\n      const expanded = !this.expanded;\n      this.parent.switch(name, expanded);\n    },\n\n    onTransitionEnd() {\n      if (!this.expanded) {\n        this.show = false;\n      } else {\n        this.$refs.wrapper.style.height = null;\n      }\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/collapse-item","sourcesContent":["<template>\n  <div :class=\"[b(), { 'van-hairline--top': index }]\">\n    <cell\n      v-bind=\"$props\"\n      :class=\"b('title', { disabled, expanded })\"\n      @click=\"onClick\"\n    >\n      <slot name=\"title\" slot=\"title\" />\n      <slot name=\"icon\" slot=\"icon\" />\n      <slot name=\"value\" />\n      <slot name=\"right-icon\" slot=\"right-icon\" />\n    </cell>\n    <div v-if=\"inited\" v-show=\"show\" ref=\"wrapper\" :class=\"b('wrapper')\" @transitionend=\"onTransitionEnd\">\n      <div ref=\"content\" :class=\"b('content')\">\n        <slot />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { raf } from '../utils/raf';\nimport create from '../utils/create';\nimport findParent from '../mixins/find-parent';\n\nexport default create({\n  name: 'collapse-item',\n\n  mixins: [findParent],\n\n  props: {\n    name: [String, Number],\n    icon: String,\n    label: String,\n    title: [String, Number],\n    value: [String, Number],\n    disabled: Boolean,\n    border: {\n      type: Boolean,\n      default: true\n    },\n    isLink: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      show: null,\n      inited: null\n    };\n  },\n\n  computed: {\n    items() {\n      return this.parent.items;\n    },\n\n    index() {\n      return this.items.indexOf(this);\n    },\n\n    currentName() {\n      return this.isDef(this.name) ? this.name : this.index;\n    },\n\n    expanded() {\n      if (!this.parent) {\n        return null;\n      }\n\n      const { value } = this.parent;\n      return this.parent.accordion\n        ? value === this.currentName\n        : value.some(name => name === this.currentName);\n    }\n  },\n\n  created() {\n    this.findParent('x-collapse');\n    this.items.push(this);\n    this.show = this.expanded;\n    this.inited = this.expanded;\n  },\n\n  destroyed() {\n    this.items.splice(this.index, 1);\n  },\n\n  watch: {\n    expanded(expanded, prev) {\n      if (prev === null) {\n        return;\n      }\n\n      if (expanded) {\n        this.show = true;\n        this.inited = true;\n      }\n\n      this.$nextTick(() => {\n        const { content, wrapper } = this.$refs;\n        if (!content || !wrapper) {\n          return;\n        }\n\n        const contentHeight = content.clientHeight + 'px';\n        wrapper.style.height = expanded ? 0 : contentHeight;\n        raf(() => {\n          wrapper.style.height = expanded ? contentHeight : 0;\n        });\n      });\n    }\n  },\n\n  methods: {\n    onClick() {\n      if (this.disabled) {\n        return;\n      }\n\n      const { parent } = this;\n      const name = parent.accordion && this.currentName === parent.value ? '' : this.currentName;\n      const expanded = !this.expanded;\n      this.parent.switch(name, expanded);\n    },\n\n    onTransitionEnd() {\n      if (!this.expanded) {\n        this.show = false;\n      } else {\n        this.$refs.wrapper.style.height = null;\n      }\n    }\n  }\n});\n</script>\n"]}]}