{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/sku/components/SkuStepper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/sku/components/SkuStepper.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../../utils/create';\nimport Stepper from '../../stepper';\nimport { LIMIT_TYPE } from '../constants';\n\nconst { QUOTA_LIMIT, STOCK_LIMIT } = LIMIT_TYPE;\n\nexport default create({\n  name: 'sku-stepper',\n\n  components: {\n    Stepper\n  },\n\n  props: {\n    skuEventBus: Object,\n    skuStockNum: Number,\n    selectedSku: Object,\n    selectedSkuComb: Object,\n    selectedNum: Number,\n    stepperTitle: String,\n    quota: Number,\n    quotaUsed: Number,\n    hideStock: Boolean,\n    disableStepperInput: Boolean,\n    customStepperConfig: Object\n  },\n\n  data() {\n    return {\n      currentNum: this.selectedNum,\n      // 购买限制类型: 限购/库存\n      limitType: STOCK_LIMIT\n    };\n  },\n\n  watch: {\n    currentNum(num) {\n      this.skuEventBus.$emit('sku:numChange', num);\n    },\n\n    stepperLimit(limit) {\n      if (limit < this.currentNum) {\n        this.currentNum = limit;\n      }\n    }\n  },\n\n  computed: {\n    stock() {\n      if (this.selectedSkuComb) {\n        return this.selectedSkuComb.stock_num;\n      }\n      return this.skuStockNum;\n    },\n\n    stockText() {\n      const { stockFormatter } = this.customStepperConfig;\n      if (stockFormatter) return stockFormatter(this.stock);\n\n      return `剩余${this.stock}件`;\n    },\n\n    quotaText() {\n      const { quotaText } = this.customStepperConfig;\n      let text = '';\n\n      if (quotaText) {\n        text = quotaText;\n      } else if (this.quota > 0) {\n        text = `每人限购${this.quota}件`;\n      }\n\n      return text;\n    },\n\n    stepperLimit() {\n      const quotaLimit = this.quota - this.quotaUsed;\n      let limit;\n\n      // 无限购时直接取库存，有限购时取限购数和库存数中小的那个\n      if (this.quota > 0 && quotaLimit <= this.stock) {\n        // 修正负的limit\n        limit = quotaLimit < 0 ? 0 : quotaLimit;\n        this.limitType = QUOTA_LIMIT;\n      } else {\n        limit = this.stock;\n        this.limitType = STOCK_LIMIT;\n      }\n\n      return limit;\n    }\n  },\n\n  methods: {\n    setCurrentNum(num) {\n      this.currentNum = num;\n    },\n\n    onOverLimit(action) {\n      this.skuEventBus.$emit('sku:overLimit', {\n        action,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed\n      });\n    },\n\n    onChange(currentValue) {\n      const { handleStepperChange } = this.customStepperConfig;\n      handleStepperChange && handleStepperChange(currentValue);\n      this.$emit('change', currentValue);\n    }\n  }\n});\n",{"version":3,"sources":["SkuStepper.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SkuStepper.vue","sourceRoot":"node_modules/healen-x-ui/packages/sku/components","sourcesContent":["<template>\n  <div class=\"van-sku-stepper-stock\">\n    <div class=\"van-sku-stepper-container\">\n      <div class=\"van-sku__stepper-title\">{{ stepperTitle || '购买数量' }}：</div>\n      <stepper\n        class=\"van-sku__stepper\"\n        v-model=\"currentNum\"\n        :min=\"1\"\n        :max=\"stepperLimit\"\n        :disable-input=\"disableStepperInput\"\n        @overlimit=\"onOverLimit\"\n        @change=\"onChange\"\n      />\n    </div>\n    <div v-if=\"!hideStock\" class=\"van-sku__stock\">{{ stockText }}</div>\n    <div v-if=\"quotaText\" class=\"van-sku__quota\">{{ quotaText }}</div>\n  </div>\n</template>\n\n<script>\nimport create from '../../utils/create';\nimport Stepper from '../../stepper';\nimport { LIMIT_TYPE } from '../constants';\n\nconst { QUOTA_LIMIT, STOCK_LIMIT } = LIMIT_TYPE;\n\nexport default create({\n  name: 'sku-stepper',\n\n  components: {\n    Stepper\n  },\n\n  props: {\n    skuEventBus: Object,\n    skuStockNum: Number,\n    selectedSku: Object,\n    selectedSkuComb: Object,\n    selectedNum: Number,\n    stepperTitle: String,\n    quota: Number,\n    quotaUsed: Number,\n    hideStock: Boolean,\n    disableStepperInput: Boolean,\n    customStepperConfig: Object\n  },\n\n  data() {\n    return {\n      currentNum: this.selectedNum,\n      // 购买限制类型: 限购/库存\n      limitType: STOCK_LIMIT\n    };\n  },\n\n  watch: {\n    currentNum(num) {\n      this.skuEventBus.$emit('sku:numChange', num);\n    },\n\n    stepperLimit(limit) {\n      if (limit < this.currentNum) {\n        this.currentNum = limit;\n      }\n    }\n  },\n\n  computed: {\n    stock() {\n      if (this.selectedSkuComb) {\n        return this.selectedSkuComb.stock_num;\n      }\n      return this.skuStockNum;\n    },\n\n    stockText() {\n      const { stockFormatter } = this.customStepperConfig;\n      if (stockFormatter) return stockFormatter(this.stock);\n\n      return `剩余${this.stock}件`;\n    },\n\n    quotaText() {\n      const { quotaText } = this.customStepperConfig;\n      let text = '';\n\n      if (quotaText) {\n        text = quotaText;\n      } else if (this.quota > 0) {\n        text = `每人限购${this.quota}件`;\n      }\n\n      return text;\n    },\n\n    stepperLimit() {\n      const quotaLimit = this.quota - this.quotaUsed;\n      let limit;\n\n      // 无限购时直接取库存，有限购时取限购数和库存数中小的那个\n      if (this.quota > 0 && quotaLimit <= this.stock) {\n        // 修正负的limit\n        limit = quotaLimit < 0 ? 0 : quotaLimit;\n        this.limitType = QUOTA_LIMIT;\n      } else {\n        limit = this.stock;\n        this.limitType = STOCK_LIMIT;\n      }\n\n      return limit;\n    }\n  },\n\n  methods: {\n    setCurrentNum(num) {\n      this.currentNum = num;\n    },\n\n    onOverLimit(action) {\n      this.skuEventBus.$emit('sku:overLimit', {\n        action,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed\n      });\n    },\n\n    onChange(currentValue) {\n      const { handleStepperChange } = this.customStepperConfig;\n      handleStepperChange && handleStepperChange(currentValue);\n      this.$emit('change', currentValue);\n    }\n  }\n});\n</script>\n"]}]}