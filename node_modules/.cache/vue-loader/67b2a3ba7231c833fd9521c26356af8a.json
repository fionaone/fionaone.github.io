{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/radio/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/radio/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\nimport findParent from '../mixins/find-parent';\n\nexport default create({\n  name: 'radio',\n\n  mixins: [findParent],\n\n  props: {\n    name: null,\n    value: null,\n    disabled: Boolean,\n    labelDisabled: Boolean,\n    labelPosition: Boolean\n  },\n\n  computed: {\n    currentValue: {\n      get() {\n        return this.parent ? this.parent.value : this.value;\n      },\n\n      set(val) {\n        (this.parent || this).$emit('input', val);\n      }\n    },\n    isDisabled() {\n      return this.parent\n        ? this.parent.disabled || this.disabled\n        : this.disabled;\n    }\n  },\n  created() {\n    this.findParent('x-radio-group');\n  },\n\n  methods: {\n    onClickLabel() {\n      if (!this.isDisabled && !this.labelDisabled) {\n        this.currentValue = this.name;\n      }\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/radio","sourcesContent":["<template>\n  <div :class=\"b({ disabled: isDisabled })\" @click=\"$emit('click')\">\n    <span :class=\"b('input')\">\n      <input\n        :value=\"name\"\n        v-model=\"currentValue\"\n        type=\"radio\"\n        :class=\"b('control')\"\n        :disabled=\"isDisabled\"\n      >\n      <icon :name=\"currentValue === name ? 'checked' : 'check'\" />\n    </span>\n    <span v-if=\"$slots.default\" :class=\"b('label', labelPosition)\" @click=\"onClickLabel\">\n      <slot />\n    </span>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport findParent from '../mixins/find-parent';\n\nexport default create({\n  name: 'radio',\n\n  mixins: [findParent],\n\n  props: {\n    name: null,\n    value: null,\n    disabled: Boolean,\n    labelDisabled: Boolean,\n    labelPosition: Boolean\n  },\n\n  computed: {\n    currentValue: {\n      get() {\n        return this.parent ? this.parent.value : this.value;\n      },\n\n      set(val) {\n        (this.parent || this).$emit('input', val);\n      }\n    },\n    isDisabled() {\n      return this.parent\n        ? this.parent.disabled || this.disabled\n        : this.disabled;\n    }\n  },\n  created() {\n    this.findParent('x-radio-group');\n  },\n\n  methods: {\n    onClickLabel() {\n      if (!this.isDisabled && !this.labelDisabled) {\n        this.currentValue = this.name;\n      }\n    }\n  }\n});\n</script>\n"]}]}