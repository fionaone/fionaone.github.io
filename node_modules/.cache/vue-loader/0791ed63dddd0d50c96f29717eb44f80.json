{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/address-edit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/address-edit/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable camelcase */\nimport create from '../utils/create';\nimport { isObj } from '../utils';\nimport Field from '../field';\nimport VanButton from '../button';\nimport Popup from '../popup';\nimport Toast from '../toast';\nimport Dialog from '../dialog';\nimport VanArea from '../area';\nimport AddressEditDetail from './Detail';\nimport SwitchCell from '../switch-cell';\nimport validateMobile from '../utils/validate/mobile';\n\nconst defaultData = {\n  name: '',\n  tel: '',\n  country: '',\n  province: '',\n  city: '',\n  county: '',\n  areaCode: '',\n  postalCode: '',\n  addressDetail: '',\n  isDefault: false\n};\n\nexport default create({\n  name: 'address-edit',\n\n  components: {\n    Field,\n    Popup,\n    VanArea,\n    VanButton,\n    SwitchCell,\n    AddressEditDetail\n  },\n\n  props: {\n    areaList: Object,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    validator: Function,\n    showDelete: Boolean,\n    showPostal: Boolean,\n    showSetDefault: Boolean,\n    showSearchResult: Boolean,\n    saveButtonText: String,\n    deleteButtonText: String,\n    showArea: {\n      type: Boolean,\n      default: true\n    },\n    showDetail: {\n      type: Boolean,\n      default: true\n    },\n    detailRows: {\n      type: Number,\n      default: 1\n    },\n    addressInfo: {\n      type: Object,\n      default: () => ({ ...defaultData })\n    },\n    searchResult: {\n      type: Array,\n      default: () => []\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n\n  data() {\n    return {\n      data: {},\n      showAreaPopup: false,\n      detailFocused: false,\n      errorInfo: {\n        tel: false,\n        name: false,\n        postalCode: false,\n        addressDetail: false\n      }\n    };\n  },\n\n  computed: {\n    // hide bottom field when use search && detail get focused\n    hideBottomFields() {\n      return this.searchResult.length && this.detailFocused;\n    },\n\n    areaListLoaded() {\n      return isObj(this.areaList) && Object.keys(this.areaList).length;\n    },\n\n    areaText() {\n      const { country, province, city, county, areaCode } = this.data;\n      if (areaCode) {\n        const arr = [country, province, city, county];\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n        return arr.filter(text => text).join('/');\n      }\n      return '';\n    }\n  },\n\n  watch: {\n    addressInfo: {\n      handler(val) {\n        this.data = {\n          ...defaultData,\n          ...val\n        };\n\n        this.setAreaCode(val.areaCode);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    areaList() {\n      this.setAreaCode(this.data.areaCode);\n    }\n  },\n\n  methods: {\n    onFocus(key) {\n      this.errorInfo[key] = false;\n      this.detailFocused = key === 'addressDetail';\n      this.$emit('focus', key);\n    },\n\n    onChangeDetail(val) {\n      this.data.addressDetail = val;\n      this.$emit('change-detail', val);\n    },\n\n    onAreaConfirm(values) {\n      this.showAreaPopup = false;\n      this.assignAreaValues();\n      this.$emit('change-area', values);\n    },\n\n    assignAreaValues(values) {\n      const { area } = this.$refs;\n      if (area) {\n        const detail = area.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        Object.assign(this.data, detail);\n      }\n    },\n\n    onSave() {\n      const items = ['name', 'tel', 'areaCode', 'addressDetail'];\n\n      if (this.showPostal) {\n        items.push('postalCode');\n      }\n\n      const isValid = items.every(item => {\n        const msg = this.getErrorMessage(item);\n        if (msg) {\n          this.errorInfo[item] = true;\n          Toast(msg);\n        }\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n\n    getErrorMessage(key) {\n      const value = String(this.data[key] || '').trim();\n      const { $t } = this;\n\n      if (this.validator) {\n        const message = this.validator(key, value);\n        if (message) {\n          return message;\n        }\n      }\n\n      switch (key) {\n        case 'name':\n          return value ? '' : $t('nameEmpty');\n        case 'tel':\n          return this.telValidator(value) ? '' : $t('telInvalid');\n        case 'areaCode':\n          return value ? '' : $t('areaEmpty');\n        case 'addressDetail':\n          return value ? '' : $t('addressEmpty');\n        case 'postalCode':\n          return value && !/^\\d{6}$/.test(value) ? $t('postalEmpty') : '';\n      }\n    },\n\n    onDelete() {\n      Dialog.confirm({\n        title: this.$t('confirmDelete')\n      })\n        .then(() => {\n          this.$emit('delete', this.data);\n        })\n        .catch(() => {\n          this.$emit('cancel-delete', this.data);\n        });\n    },\n\n    // get values of area component\n    getArea() {\n      return this.$refs.area ? this.$refs.area.getValues() : [];\n    },\n\n    // set area code to area component\n    setAreaCode(code) {\n      this.data.areaCode = code || '';\n      code && this.$nextTick(this.assignAreaValues);\n    },\n\n    setAddressDetail(value) {\n      this.data.addressDetail = value;\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/address-edit","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <cell-group>\n      <field\n        v-model=\"data.name\"\n        clearable\n        :label=\"$t('name')\"\n        :placeholder=\"$t('namePlaceholder')\"\n        :error=\"errorInfo.name\"\n        @focus=\"onFocus('name')\"\n      />\n      <field\n        v-model=\"data.tel\"\n        clearable\n        type=\"tel\"\n        :label=\"$t('tel')\"\n        :placeholder=\"$t('telPlaceholder')\"\n        :error=\"errorInfo.tel\"\n        @focus=\"onFocus('tel')\"\n      />\n      <field\n        v-show=\"showArea\"\n        readonly\n        :label=\"$t('area')\"\n        :placeholder=\"$t('areaPlaceholder')\"\n        :value=\"areaText\"\n        @click=\"showAreaPopup = true\"\n      />\n      <address-edit-detail\n        v-show=\"showDetail\"\n        :focused=\"detailFocused\"\n        :value=\"data.addressDetail\"\n        :error=\"errorInfo.addressDetail\"\n        :detail-rows=\"detailRows\"\n        :search-result=\"searchResult\"\n        :show-search-result=\"showSearchResult\"\n        @focus=\"onFocus('addressDetail')\"\n        @blur=\"detailFocused = false\"\n        @input=\"onChangeDetail\"\n        @select-search=\"$emit('select-search', $event)\"\n      />\n      <field\n        v-if=\"showPostal\"\n        v-show=\"!hideBottomFields\"\n        v-model=\"data.postalCode\"\n        type=\"tel\"\n        maxlength=\"6\"\n        :label=\"$t('postal')\"\n        :placeholder=\"$t('postal')\"\n        :error=\"errorInfo.postalCode\"\n        @focus=\"onFocus('postalCode')\"\n      />\n      <slot />\n      <switch-cell\n        v-if=\"showSetDefault\"\n        v-show=\"!hideBottomFields\"\n        v-model=\"data.isDefault\"\n        :title=\"$t('defaultAddress')\"\n        @change=\"$emit('change-default', $event)\"\n      />\n    </cell-group>\n\n    <div v-show=\"!hideBottomFields\" :class=\"b('buttons')\">\n      <x-button block :loading=\"isSaving\" @click=\"onSave\" type=\"danger\">\n        {{ saveButtonText || $t('save') }}\n      </x-button>\n      <x-button block :loading=\"isDeleting\" @click=\"onDelete\" v-if=\"showDelete\">\n        {{ deleteButtonText || $t('delete') }}\n      </x-button>\n    </div>\n\n    <popup v-model=\"showAreaPopup\" position=\"bottom\" :lazy-render=\"false\" get-container=\"body\">\n      <x-area\n        ref=\"area\"\n        :loading=\"!areaListLoaded\"\n        :value=\"data.areaCode\"\n        :area-list=\"areaList\"\n        @confirm=\"onAreaConfirm\"\n        @cancel=\"showAreaPopup = false\"\n      />\n    </popup>\n  </div>\n</template>\n\n<script>\n/* eslint-disable camelcase */\nimport create from '../utils/create';\nimport { isObj } from '../utils';\nimport Field from '../field';\nimport VanButton from '../button';\nimport Popup from '../popup';\nimport Toast from '../toast';\nimport Dialog from '../dialog';\nimport VanArea from '../area';\nimport AddressEditDetail from './Detail';\nimport SwitchCell from '../switch-cell';\nimport validateMobile from '../utils/validate/mobile';\n\nconst defaultData = {\n  name: '',\n  tel: '',\n  country: '',\n  province: '',\n  city: '',\n  county: '',\n  areaCode: '',\n  postalCode: '',\n  addressDetail: '',\n  isDefault: false\n};\n\nexport default create({\n  name: 'address-edit',\n\n  components: {\n    Field,\n    Popup,\n    VanArea,\n    VanButton,\n    SwitchCell,\n    AddressEditDetail\n  },\n\n  props: {\n    areaList: Object,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    validator: Function,\n    showDelete: Boolean,\n    showPostal: Boolean,\n    showSetDefault: Boolean,\n    showSearchResult: Boolean,\n    saveButtonText: String,\n    deleteButtonText: String,\n    showArea: {\n      type: Boolean,\n      default: true\n    },\n    showDetail: {\n      type: Boolean,\n      default: true\n    },\n    detailRows: {\n      type: Number,\n      default: 1\n    },\n    addressInfo: {\n      type: Object,\n      default: () => ({ ...defaultData })\n    },\n    searchResult: {\n      type: Array,\n      default: () => []\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n\n  data() {\n    return {\n      data: {},\n      showAreaPopup: false,\n      detailFocused: false,\n      errorInfo: {\n        tel: false,\n        name: false,\n        postalCode: false,\n        addressDetail: false\n      }\n    };\n  },\n\n  computed: {\n    // hide bottom field when use search && detail get focused\n    hideBottomFields() {\n      return this.searchResult.length && this.detailFocused;\n    },\n\n    areaListLoaded() {\n      return isObj(this.areaList) && Object.keys(this.areaList).length;\n    },\n\n    areaText() {\n      const { country, province, city, county, areaCode } = this.data;\n      if (areaCode) {\n        const arr = [country, province, city, county];\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n        return arr.filter(text => text).join('/');\n      }\n      return '';\n    }\n  },\n\n  watch: {\n    addressInfo: {\n      handler(val) {\n        this.data = {\n          ...defaultData,\n          ...val\n        };\n\n        this.setAreaCode(val.areaCode);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    areaList() {\n      this.setAreaCode(this.data.areaCode);\n    }\n  },\n\n  methods: {\n    onFocus(key) {\n      this.errorInfo[key] = false;\n      this.detailFocused = key === 'addressDetail';\n      this.$emit('focus', key);\n    },\n\n    onChangeDetail(val) {\n      this.data.addressDetail = val;\n      this.$emit('change-detail', val);\n    },\n\n    onAreaConfirm(values) {\n      this.showAreaPopup = false;\n      this.assignAreaValues();\n      this.$emit('change-area', values);\n    },\n\n    assignAreaValues(values) {\n      const { area } = this.$refs;\n      if (area) {\n        const detail = area.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        Object.assign(this.data, detail);\n      }\n    },\n\n    onSave() {\n      const items = ['name', 'tel', 'areaCode', 'addressDetail'];\n\n      if (this.showPostal) {\n        items.push('postalCode');\n      }\n\n      const isValid = items.every(item => {\n        const msg = this.getErrorMessage(item);\n        if (msg) {\n          this.errorInfo[item] = true;\n          Toast(msg);\n        }\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n\n    getErrorMessage(key) {\n      const value = String(this.data[key] || '').trim();\n      const { $t } = this;\n\n      if (this.validator) {\n        const message = this.validator(key, value);\n        if (message) {\n          return message;\n        }\n      }\n\n      switch (key) {\n        case 'name':\n          return value ? '' : $t('nameEmpty');\n        case 'tel':\n          return this.telValidator(value) ? '' : $t('telInvalid');\n        case 'areaCode':\n          return value ? '' : $t('areaEmpty');\n        case 'addressDetail':\n          return value ? '' : $t('addressEmpty');\n        case 'postalCode':\n          return value && !/^\\d{6}$/.test(value) ? $t('postalEmpty') : '';\n      }\n    },\n\n    onDelete() {\n      Dialog.confirm({\n        title: this.$t('confirmDelete')\n      })\n        .then(() => {\n          this.$emit('delete', this.data);\n        })\n        .catch(() => {\n          this.$emit('cancel-delete', this.data);\n        });\n    },\n\n    // get values of area component\n    getArea() {\n      return this.$refs.area ? this.$refs.area.getValues() : [];\n    },\n\n    // set area code to area component\n    setAreaCode(code) {\n      this.data.areaCode = code || '';\n      code && this.$nextTick(this.assignAreaValues);\n    },\n\n    setAddressDetail(value) {\n      this.data.addressDetail = value;\n    }\n  }\n});\n</script>\n"]}]}