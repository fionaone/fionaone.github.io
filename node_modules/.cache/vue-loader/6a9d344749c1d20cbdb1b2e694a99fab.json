{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/rate/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/rate/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\n\nexport default create({\n  name: 'rate',\n\n  props: {\n    readonly: Boolean,\n    disabled: Boolean,\n    size: {\n      type: Number,\n      default: 20\n    },\n    color: {\n      type: String,\n      default: '#ffd21e'\n    },\n    voidColor: {\n      type: String,\n      default: '#c7c7c7'\n    },\n    disabledColor: {\n      type: String,\n      default: '#bdbdbd'\n    },\n    count: {\n      type: Number,\n      default: 5\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        width: this.size + 'px'\n      };\n    },\n\n    list() {\n      return Array.apply(null, { length: this.count }).map((value, index) => index < this.value);\n    }\n  },\n\n  methods: {\n    onSelect(index) {\n      if (!this.disabled && !this.readonly) {\n        this.$emit('input', index + 1);\n        this.$emit('change', index + 1);\n      }\n    },\n\n    onTouchMove(event) {\n      if (!document.elementFromPoint) {\n        return;\n      }\n\n      event.preventDefault();\n      const { clientX, clientY } = event.touches[0];\n      const target = document.elementFromPoint(clientX, clientY);\n      if (target && target.dataset) {\n        const { index } = target.dataset;\n\n        /* istanbul ignore else */\n        if (index) {\n          this.onSelect(+index);\n        }\n      }\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/rate","sourcesContent":["<template>\n  <div :class=\"b()\" @touchmove=\"onTouchMove\">\n    <svg\n      v-for=\"(isFull, index) in list\"\n      :fill=\"disabled ? disabledColor : isFull ? color : voidColor\"\n      viewBox=\"0 0 32 32\"\n      :style=\"style\"\n      :class=\"b('item')\"\n      :data-index=\"index\"\n      @click=\"onSelect(index)\"\n    >\n      <path :d=\"isFull ? 'M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z' : 'M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798zM16 23.547l-6.983 3.671 1.334-7.776-5.65-5.507 7.808-1.134 3.492-7.075 3.492 7.075 7.807 1.134-5.65 5.507 1.334 7.776-6.983-3.671z'\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'rate',\n\n  props: {\n    readonly: Boolean,\n    disabled: Boolean,\n    size: {\n      type: Number,\n      default: 20\n    },\n    color: {\n      type: String,\n      default: '#ffd21e'\n    },\n    voidColor: {\n      type: String,\n      default: '#c7c7c7'\n    },\n    disabledColor: {\n      type: String,\n      default: '#bdbdbd'\n    },\n    count: {\n      type: Number,\n      default: 5\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    style() {\n      return {\n        width: this.size + 'px'\n      };\n    },\n\n    list() {\n      return Array.apply(null, { length: this.count }).map((value, index) => index < this.value);\n    }\n  },\n\n  methods: {\n    onSelect(index) {\n      if (!this.disabled && !this.readonly) {\n        this.$emit('input', index + 1);\n        this.$emit('change', index + 1);\n      }\n    },\n\n    onTouchMove(event) {\n      if (!document.elementFromPoint) {\n        return;\n      }\n\n      event.preventDefault();\n      const { clientX, clientY } = event.touches[0];\n      const target = document.elementFromPoint(clientX, clientY);\n      if (target && target.dataset) {\n        const { index } = target.dataset;\n\n        /* istanbul ignore else */\n        if (index) {\n          this.onSelect(+index);\n        }\n      }\n    }\n  }\n});\n</script>\n"]}]}