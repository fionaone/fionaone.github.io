{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/search/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/search/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Field from '../field';\nimport create from '../utils/create';\n\nexport default create({\n  name: 'search',\n\n  inheritAttrs: false,\n\n  components: {\n    Field\n  },\n\n  props: {\n    value: String,\n    showAction: Boolean,\n    background: {\n      type: String,\n      default: '#f2f2f2'\n    }\n  },\n\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        keypress: this.onKeypress\n      };\n    }\n  },\n\n  methods: {\n    onInput(value) {\n      this.$emit('input', value);\n    },\n\n    onKeypress(event) {\n      // press enter\n      if (event.keyCode === 13) {\n        event.preventDefault();\n        this.$emit('search', this.value);\n      }\n      this.$emit('keypress', event);\n    },\n\n    onBack() {\n      this.$emit('input', '');\n      this.$emit('cancel');\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/search","sourcesContent":["<template>\n  <div :class=\"b({ 'show-action': showAction })\" :style=\"{ background }\">\n    <field\n      v-bind=\"$attrs\"\n      v-on=\"listeners\"\n      clearable\n      type=\"search\"\n      :value=\"value\"\n      :border=\"false\"\n      left-icon=\"search\"\n    >\n      <slot name=\"left-icon\" slot=\"left-icon\" />\n    </field>\n    <div v-if=\"showAction\" :class=\"b('action')\">\n      <slot name=\"action\">\n        <div @click=\"onBack\">{{ $t('cancel') }}</div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Field from '../field';\nimport create from '../utils/create';\n\nexport default create({\n  name: 'search',\n\n  inheritAttrs: false,\n\n  components: {\n    Field\n  },\n\n  props: {\n    value: String,\n    showAction: Boolean,\n    background: {\n      type: String,\n      default: '#f2f2f2'\n    }\n  },\n\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.onInput,\n        keypress: this.onKeypress\n      };\n    }\n  },\n\n  methods: {\n    onInput(value) {\n      this.$emit('input', value);\n    },\n\n    onKeypress(event) {\n      // press enter\n      if (event.keyCode === 13) {\n        event.preventDefault();\n        this.$emit('search', this.value);\n      }\n      this.$emit('keypress', event);\n    },\n\n    onBack() {\n      this.$emit('input', '');\n      this.$emit('cancel');\n    }\n  }\n});\n</script>\n"]}]}