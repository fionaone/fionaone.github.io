{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tree-select/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tree-select/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\n\nexport default create({\n  name: 'tree-select',\n\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    mainActiveIndex: {\n      type: Number,\n      default: 0\n    },\n    activeId: {\n      type: [Number, String],\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 300\n    }\n  },\n\n  computed: {\n    subItems() {\n      const selectedItem = this.items[this.mainActiveIndex] || {};\n      return selectedItem.children || [];\n    }\n  },\n\n  methods: {\n    onItemSelect(data) {\n      this.$emit('itemclick', data);\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/tree-select","sourcesContent":["<template>\n  <div :class=\"b()\" :style=\"{ height: height + 'px' }\">\n    <div :class=\"b('nav')\">\n      <div\n        v-for=\"(item, index) in items\"\n        class=\"van-ellipsis\"\n        :class=\"b('nitem', { active: mainActiveIndex === index })\"\n        @click=\"$emit('navclick', index)\">\n        {{ item.text }}\n      </div>\n    </div>\n    <div :class=\"b('content')\">\n      <div\n        v-for=\"item in subItems\"\n        :key=\"item.id\"\n        class=\"van-ellipsis\"\n        :class=\"b('item', { active: activeId === item.id })\"\n        @click=\"onItemSelect(item)\"\n      >\n        {{ item.text }}\n        <icon\n          v-if=\"activeId === item.id\"\n          name=\"success\"\n          :class=\"b('selected')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'tree-select',\n\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    mainActiveIndex: {\n      type: Number,\n      default: 0\n    },\n    activeId: {\n      type: [Number, String],\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 300\n    }\n  },\n\n  computed: {\n    subItems() {\n      const selectedItem = this.items[this.mainActiveIndex] || {};\n      return selectedItem.children || [];\n    }\n  },\n\n  methods: {\n    onItemSelect(data) {\n      this.$emit('itemclick', data);\n    }\n  }\n});\n</script>\n"]}]}