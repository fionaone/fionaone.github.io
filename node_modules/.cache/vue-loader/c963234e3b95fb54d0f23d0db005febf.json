{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/dialog/Dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/dialog/Dialog.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\nimport VanButton from '../button';\nimport Popup from '../mixins/popup';\n\nexport default create({\n  name: 'dialog',\n\n  components: {\n    VanButton\n  },\n\n  mixins: [Popup],\n\n  props: {\n    title: String,\n    message: String,\n    callback: Function,\n    className: [String, Object, Array],\n    beforeClose: Function,\n    confirmButtonText: String,\n    cancelButtonText: String,\n    showCancelButton: Boolean,\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n\n  methods: {\n    handleAction(action) {\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, state => {\n          if (state !== false) {\n            this.onClose(action);\n          }\n          this.loading[action] = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n\n    onClose(action) {\n      this.$emit('input', false);\n      this.$emit(action);\n      this.callback && this.callback(action);\n    }\n  }\n});\n",{"version":3,"sources":["Dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dialog.vue","sourceRoot":"node_modules/healen-x-ui/packages/dialog","sourcesContent":["<template>\n  <transition name=\"x-dialog-bounce\">\n    <div v-show=\"value\" :class=\"[b(), className]\">\n      <div v-if=\"title\" v-text=\"title\" :class=\"b('header', { isolated: !message && !$slots.default })\" />\n      <div :class=\"b('content')\" v-if=\"message || $slots.default\">\n        <slot>\n          <div v-if=\"message\" v-html=\"message\" :class=\"b('message', { 'has-title': title })\" />\n        </slot>\n      </div>\n      <div class=\"x-hairline--top\" :class=\"b('footer', { 'buttons': showCancelButton && showConfirmButton })\">\n        <x-button\n          v-show=\"showCancelButton\"\n          :loading=\"loading.cancel\"\n          size=\"large\"\n          :class=\"b('cancel')\"\n          @click=\"handleAction('cancel')\"\n        >\n          {{ cancelButtonText || $t('cancel') }}\n        </x-button>\n        <x-button\n          v-show=\"showConfirmButton\"\n          size=\"large\"\n          :loading=\"loading.confirm\"\n          :class=\"[b('confirm'), { 'x-hairline--left': showCancelButton && showConfirmButton }]\"\n          @click=\"handleAction('confirm')\"\n        >\n          {{ confirmButtonText || $t('confirm') }}\n        </x-button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport VanButton from '../button';\nimport Popup from '../mixins/popup';\n\nexport default create({\n  name: 'dialog',\n\n  components: {\n    VanButton\n  },\n\n  mixins: [Popup],\n\n  props: {\n    title: String,\n    message: String,\n    callback: Function,\n    className: [String, Object, Array],\n    beforeClose: Function,\n    confirmButtonText: String,\n    cancelButtonText: String,\n    showCancelButton: Boolean,\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n\n  methods: {\n    handleAction(action) {\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, state => {\n          if (state !== false) {\n            this.onClose(action);\n          }\n          this.loading[action] = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n\n    onClose(action) {\n      this.$emit('input', false);\n      this.$emit(action);\n      this.callback && this.callback(action);\n    }\n  }\n});\n</script>\n"]}]}