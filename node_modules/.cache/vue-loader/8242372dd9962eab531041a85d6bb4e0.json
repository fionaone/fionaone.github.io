{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/number-keyboard/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/number-keyboard/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport create from '../utils/create';\nimport Key from './Key';\n\nexport default create({\n  name: 'number-keyboard',\n\n  components: { Key },\n\n  props: {\n    show: Boolean,\n    title: String,\n    closeButtonText: String,\n    theme: {\n      type: String,\n      default: 'default'\n    },\n    extraKey: {\n      type: String,\n      default: ''\n    },\n    zIndex: {\n      type: Number,\n      default: 100\n    },\n    transition: {\n      type: Boolean,\n      default: true\n    },\n    showDeleteKey: {\n      type: Boolean,\n      default: true\n    },\n    hideOnClickOutside: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  mounted() {\n    this.handler(true);\n  },\n\n  destroyed() {\n    this.handler(false);\n  },\n\n  activated() {\n    this.handler(true);\n  },\n\n  deactivated() {\n    this.handler(false);\n  },\n\n  watch: {\n    show() {\n      if (!this.transition) {\n        this.$emit(this.show ? 'show' : 'hide');\n      }\n    }\n  },\n\n  computed: {\n    keys() {\n      const keys = [];\n      for (let i = 1; i <= 9; i++) {\n        keys.push({ text: i });\n      }\n\n      switch (this.theme) {\n        case 'default':\n          keys.push(\n            { text: this.extraKey, type: ['gray'] },\n            { text: 0 },\n            { text: 'delete', type: ['gray', 'delete'] }\n          );\n          break;\n        case 'custom':\n          keys.push(\n            { text: 0, type: ['middle'] },\n            { text: this.extraKey }\n          );\n          break;\n      }\n\n      return keys;\n    },\n\n    style() {\n      return {\n        zIndex: this.zIndex\n      };\n    },\n\n    showTitleClose() {\n      return this.closeButtonText && this.theme === 'default';\n    }\n  },\n\n  methods: {\n    handler(action) {\n      /* istanbul ignore if */\n      if (this.$isServer) {\n        return;\n      }\n\n      if (action !== this.handlerStatus && this.hideOnClickOutside) {\n        this.handlerStatus = action;\n        document.body[(action ? 'add' : 'remove') + 'EventListener']('touchstart', this.onBlur);\n      }\n    },\n\n    onBlur() {\n      this.$emit('blur');\n    },\n\n    onClose() {\n      this.$emit('close');\n      this.onBlur();\n    },\n\n    onAnimationEnd() {\n      this.$emit(this.show ? 'show' : 'hide');\n    },\n\n    onPressKey(text) {\n      if (text === '') {\n        return;\n      }\n\n      if (text === 'delete') {\n        this.$emit('delete');\n      } else if (text === this.closeButtonText) {\n        this.onClose();\n      } else {\n        this.$emit('input', text);\n      }\n    }\n  }\n});\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"index.vue","sourceRoot":"node_modules/healen-x-ui/packages/number-keyboard","sourcesContent":["<template>\n  <transition :name=\"transition ? 'x-slide-bottom' : ''\">\n    <div\n      v-show=\"show\"\n      :style=\"style\"\n      :class=\"b([theme])\"\n      @touchstart.stop\n      @animationend=\"onAnimationEnd\"\n      @webkitAnimationEnd=\"onAnimationEnd\"\n    >\n      <div :class=\"b('title')\" class=\"van-hairline--top\" v-if=\"title || showTitleClose\">\n        <span v-text=\"title\" />\n        <span\n          :class=\"b('close')\"\n          v-if=\"showTitleClose\"\n          v-text=\"closeButtonText\"\n          @click=\"onClose\"\n        />\n      </div>\n      <div :class=\"b('body')\">\n        <key\n          v-for=\"key in keys\"\n          :key=\"key.text\"\n          :text=\"key.text\"\n          :type=\"key.type\"\n          @press=\"onPressKey\"\n        />\n      </div>\n      <div v-if=\"theme === 'custom'\" :class=\"b('sidebar')\">\n        <key :text=\"'delete'\" :type=\"['delete', 'big']\" @press=\"onPressKey\" />\n        <key :text=\"closeButtonText\" :type=\"['green', 'big']\" @press=\"onPressKey\" />\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Key from './Key';\n\nexport default create({\n  name: 'number-keyboard',\n\n  components: { Key },\n\n  props: {\n    show: Boolean,\n    title: String,\n    closeButtonText: String,\n    theme: {\n      type: String,\n      default: 'default'\n    },\n    extraKey: {\n      type: String,\n      default: ''\n    },\n    zIndex: {\n      type: Number,\n      default: 100\n    },\n    transition: {\n      type: Boolean,\n      default: true\n    },\n    showDeleteKey: {\n      type: Boolean,\n      default: true\n    },\n    hideOnClickOutside: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  mounted() {\n    this.handler(true);\n  },\n\n  destroyed() {\n    this.handler(false);\n  },\n\n  activated() {\n    this.handler(true);\n  },\n\n  deactivated() {\n    this.handler(false);\n  },\n\n  watch: {\n    show() {\n      if (!this.transition) {\n        this.$emit(this.show ? 'show' : 'hide');\n      }\n    }\n  },\n\n  computed: {\n    keys() {\n      const keys = [];\n      for (let i = 1; i <= 9; i++) {\n        keys.push({ text: i });\n      }\n\n      switch (this.theme) {\n        case 'default':\n          keys.push(\n            { text: this.extraKey, type: ['gray'] },\n            { text: 0 },\n            { text: 'delete', type: ['gray', 'delete'] }\n          );\n          break;\n        case 'custom':\n          keys.push(\n            { text: 0, type: ['middle'] },\n            { text: this.extraKey }\n          );\n          break;\n      }\n\n      return keys;\n    },\n\n    style() {\n      return {\n        zIndex: this.zIndex\n      };\n    },\n\n    showTitleClose() {\n      return this.closeButtonText && this.theme === 'default';\n    }\n  },\n\n  methods: {\n    handler(action) {\n      /* istanbul ignore if */\n      if (this.$isServer) {\n        return;\n      }\n\n      if (action !== this.handlerStatus && this.hideOnClickOutside) {\n        this.handlerStatus = action;\n        document.body[(action ? 'add' : 'remove') + 'EventListener']('touchstart', this.onBlur);\n      }\n    },\n\n    onBlur() {\n      this.$emit('blur');\n    },\n\n    onClose() {\n      this.$emit('close');\n      this.onBlur();\n    },\n\n    onAnimationEnd() {\n      this.$emit(this.show ? 'show' : 'hide');\n    },\n\n    onPressKey(text) {\n      if (text === '') {\n        return;\n      }\n\n      if (text === 'delete') {\n        this.$emit('delete');\n      } else if (text === this.closeButtonText) {\n        this.onClose();\n      } else {\n        this.$emit('input', text);\n      }\n    }\n  }\n});\n</script>\n"]}]}