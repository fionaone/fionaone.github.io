{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/picker/PickerColumn.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/picker/PickerColumn.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport deepClone from '../utils/deep-clone';\nimport { isObj, range } from '../utils';\nvar DEFAULT_DURATION = 200;\nexport default create({\n  name: 'picker-column',\n  props: {\n    valueKey: String,\n    className: String,\n    itemHeight: Number,\n    visibleItemCount: Number,\n    initialOptions: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    defaultIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      startY: 0,\n      offset: 0,\n      duration: 0,\n      startOffset: 0,\n      options: deepClone(this.initialOptions),\n      currentIndex: this.defaultIndex\n    };\n  },\n  created: function created() {\n    this.$parent.children && this.$parent.children.push(this);\n    this.setIndex(this.currentIndex);\n  },\n  destroyed: function destroyed() {\n    var children = this.$parent.children;\n    children && children.splice(children.indexOf(this), 1);\n  },\n  watch: {\n    defaultIndex: function defaultIndex() {\n      this.setIndex(this.defaultIndex);\n    }\n  },\n  computed: {\n    count: function count() {\n      return this.options.length;\n    },\n    baseOffset: function baseOffset() {\n      return this.itemHeight * (this.visibleItemCount - 1) / 2;\n    },\n    columnStyle: function columnStyle() {\n      return {\n        height: this.itemHeight * this.visibleItemCount + 'px'\n      };\n    },\n    wrapperStyle: function wrapperStyle() {\n      return {\n        transition: \"\".concat(this.duration, \"ms\"),\n        transform: \"translate3d(0, \".concat(this.offset + this.baseOffset, \"px, 0)\"),\n        lineHeight: this.itemHeight + 'px'\n      };\n    },\n    optionStyle: function optionStyle() {\n      return {\n        height: this.itemHeight + 'px'\n      };\n    }\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      this.startY = event.touches[0].clientY;\n      this.startOffset = this.offset;\n      this.duration = 0;\n    },\n    onTouchMove: function onTouchMove(event) {\n      var deltaY = event.touches[0].clientY - this.startY;\n      this.offset = range(this.startOffset + deltaY, -(this.count * this.itemHeight), this.itemHeight);\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (this.offset !== this.startOffset) {\n        this.duration = DEFAULT_DURATION;\n        var index = range(Math.round(-this.offset / this.itemHeight), 0, this.count - 1);\n        this.setIndex(index, true);\n      }\n    },\n    adjustIndex: function adjustIndex(index) {\n      index = range(index, 0, this.count);\n\n      for (var i = index; i < this.count; i++) {\n        if (!this.isDisabled(this.options[i])) return i;\n      }\n\n      for (var _i = index - 1; _i >= 0; _i--) {\n        if (!this.isDisabled(this.options[_i])) return _i;\n      }\n    },\n    isDisabled: function isDisabled(option) {\n      return isObj(option) && option.disabled;\n    },\n    getOptionText: function getOptionText(option) {\n      return isObj(option) && this.valueKey in option ? option[this.valueKey] : option;\n    },\n    setIndex: function setIndex(index, userAction) {\n      index = this.adjustIndex(index) || 0;\n      this.offset = -index * this.itemHeight;\n\n      if (index !== this.currentIndex) {\n        this.currentIndex = index;\n        userAction && this.$emit('change', index);\n      }\n    },\n    setValue: function setValue(value) {\n      var options = this.options;\n\n      for (var i = 0; i < options.length; i++) {\n        if (this.getOptionText(options[i]) === value) {\n          return this.setIndex(i);\n        }\n      }\n    },\n    getValue: function getValue() {\n      return this.options[this.currentIndex];\n    }\n  }\n});",{"version":3,"sources":["PickerColumn.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n  <div\n    :class=\"[b(), className]\"\n    :style=\"columnStyle\"\n    @touchstart=\"onTouchStart\"\n    @touchmove.prevent=\"onTouchMove\"\n    @touchend=\"onTouchEnd\"\n    @touchcancel=\"onTouchEnd\"\n  >\n    <ul :style=\"wrapperStyle\">\n      <li\n        v-for=\"(option, index) in options\"\n        v-html=\"getOptionText(option)\"\n        :style=\"optionStyle\"\n        class=\"x-ellipsis\"\n        :class=\"b('item', {\n          disabled: isDisabled(option),\n          selected: index === currentIndex\n        })\"\n        @click=\"setIndex(index, true)\"\n      />\n    </ul>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport deepClone from '../utils/deep-clone';\nimport { isObj, range } from '../utils';\n\nconst DEFAULT_DURATION = 200;\n\nexport default create({\n  name: 'picker-column',\n\n  props: {\n    valueKey: String,\n    className: String,\n    itemHeight: Number,\n    visibleItemCount: Number,\n    initialOptions: {\n      type: Array,\n      default: () => []\n    },\n    defaultIndex: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      startY: 0,\n      offset: 0,\n      duration: 0,\n      startOffset: 0,\n      options: deepClone(this.initialOptions),\n      currentIndex: this.defaultIndex\n    };\n  },\n\n  created() {\n    this.$parent.children && this.$parent.children.push(this);\n    this.setIndex(this.currentIndex);\n  },\n\n  destroyed() {\n    const { children } = this.$parent;\n    children && children.splice(children.indexOf(this), 1);\n  },\n\n  watch: {\n    defaultIndex() {\n      this.setIndex(this.defaultIndex);\n    }\n  },\n\n  computed: {\n    count() {\n      return this.options.length;\n    },\n\n    baseOffset() {\n      return this.itemHeight * (this.visibleItemCount - 1) / 2;\n    },\n\n    columnStyle() {\n      return {\n        height: this.itemHeight * this.visibleItemCount + 'px'\n      };\n    },\n\n    wrapperStyle() {\n      return {\n        transition: `${this.duration}ms`,\n        transform: `translate3d(0, ${this.offset + this.baseOffset}px, 0)`,\n        lineHeight: this.itemHeight + 'px'\n      };\n    },\n\n    optionStyle() {\n      return {\n        height: this.itemHeight + 'px'\n      };\n    }\n  },\n\n  methods: {\n    onTouchStart(event) {\n      this.startY = event.touches[0].clientY;\n      this.startOffset = this.offset;\n      this.duration = 0;\n    },\n\n    onTouchMove(event) {\n      const deltaY = event.touches[0].clientY - this.startY;\n      this.offset = range(\n        this.startOffset + deltaY,\n        -(this.count * this.itemHeight),\n        this.itemHeight\n      );\n    },\n\n    onTouchEnd() {\n      if (this.offset !== this.startOffset) {\n        this.duration = DEFAULT_DURATION;\n        const index = range(\n          Math.round(-this.offset / this.itemHeight),\n          0,\n          this.count - 1\n        );\n        this.setIndex(index, true);\n      }\n    },\n\n    adjustIndex(index) {\n      index = range(index, 0, this.count);\n      for (let i = index; i < this.count; i++) {\n        if (!this.isDisabled(this.options[i])) return i;\n      }\n      for (let i = index - 1; i >= 0; i--) {\n        if (!this.isDisabled(this.options[i])) return i;\n      }\n    },\n\n    isDisabled(option) {\n      return isObj(option) && option.disabled;\n    },\n\n    getOptionText(option) {\n      return isObj(option) && this.valueKey in option\n        ? option[this.valueKey]\n        : option;\n    },\n\n    setIndex(index, userAction) {\n      index = this.adjustIndex(index) || 0;\n      this.offset = -index * this.itemHeight;\n\n      if (index !== this.currentIndex) {\n        this.currentIndex = index;\n        userAction && this.$emit('change', index);\n      }\n    },\n\n    setValue(value) {\n      const { options } = this;\n      for (let i = 0; i < options.length; i++) {\n        if (this.getOptionText(options[i]) === value) {\n          return this.setIndex(i);\n        }\n      }\n    },\n\n    getValue() {\n      return this.options[this.currentIndex];\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/picker"}]}