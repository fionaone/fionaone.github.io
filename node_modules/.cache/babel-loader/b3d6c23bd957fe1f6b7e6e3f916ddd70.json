{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/notice-bar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/notice-bar/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nexport default create({\n  name: 'notice-bar',\n  props: {\n    text: String,\n    mode: String,\n    color: String,\n    leftIcon: String,\n    background: String,\n    delay: {\n      type: [String, Number],\n      default: 1\n    },\n    scrollable: {\n      type: Boolean,\n      default: true\n    },\n    speed: {\n      type: Number,\n      default: 50\n    }\n  },\n  data: function data() {\n    return {\n      wrapWidth: 0,\n      firstRound: true,\n      duration: 0,\n      offsetWidth: 0,\n      showNoticeBar: true,\n      animationClass: ''\n    };\n  },\n  computed: {\n    iconName: function iconName() {\n      return this.mode === 'closeable' ? 'close' : this.mode === 'link' ? 'arrow' : '';\n    },\n    barStyle: function barStyle() {\n      return {\n        color: this.color,\n        background: this.background\n      };\n    },\n    contentStyle: function contentStyle() {\n      return {\n        paddingLeft: this.firstRound ? 0 : this.wrapWidth + 'px',\n        animationDelay: (this.firstRound ? this.delay : 0) + 's',\n        animationDuration: this.duration + 's'\n      };\n    }\n  },\n  watch: {\n    text: {\n      handler: function handler() {\n        var _this = this;\n\n        this.$nextTick(function () {\n          var _this$$refs = _this.$refs,\n              wrap = _this$$refs.wrap,\n              content = _this$$refs.content;\n\n          if (!wrap || !content) {\n            return;\n          }\n\n          var wrapWidth = wrap.getBoundingClientRect().width;\n          var offsetWidth = content.getBoundingClientRect().width;\n\n          if (_this.scrollable && offsetWidth > wrapWidth) {\n            _this.wrapWidth = wrapWidth;\n            _this.offsetWidth = offsetWidth;\n            _this.duration = offsetWidth / _this.speed;\n            _this.animationClass = _this.b('play');\n          }\n        });\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    onClickIcon: function onClickIcon() {\n      this.showNoticeBar = this.mode !== 'closeable';\n    },\n    onAnimationEnd: function onAnimationEnd() {\n      var _this2 = this;\n\n      this.firstRound = false;\n      this.$nextTick(function () {\n        _this2.duration = (_this2.offsetWidth + _this2.wrapWidth) / _this2.speed;\n        _this2.animationClass = _this2.b('play--infinite');\n      });\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-show=\"showNoticeBar\"\n    :class=\"b({ withicon: mode })\"\n    :style=\"barStyle\"\n    @click=\"$emit('click')\"\n  >\n    <div v-if=\"leftIcon\" :class=\"b('left-icon')\">\n      <x-icon :name=\"leftIcon\"/>\n    </div>\n    <div :class=\"b('wrap')\" ref=\"wrap\">\n      <div\n        ref=\"content\"\n        :class=\"[b('content'), animationClass, { 'van-ellipsis': !scrollable }]\"\n        :style=\"contentStyle\"\n        @animationend=\"onAnimationEnd\"\n        @webkitAnimationEnd=\"onAnimationEnd\"\n      >\n        <slot>{{ text }}</slot>\n      </div>\n    </div>\n    <icon\n      v-if=\"iconName\"\n      :class=\"b('right-icon')\"\n      :name=\"iconName\"\n      @click=\"onClickIcon\"\n    />\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'notice-bar',\n\n  props: {\n    text: String,\n    mode: String,\n    color: String,\n    leftIcon: String,\n    background: String,\n    delay: {\n      type: [String, Number],\n      default: 1\n    },\n    scrollable: {\n      type: Boolean,\n      default: true\n    },\n    speed: {\n      type: Number,\n      default: 50\n    }\n  },\n\n  data() {\n    return {\n      wrapWidth: 0,\n      firstRound: true,\n      duration: 0,\n      offsetWidth: 0,\n      showNoticeBar: true,\n      animationClass: ''\n    };\n  },\n\n  computed: {\n    iconName() {\n      return this.mode === 'closeable' ? 'close' : this.mode === 'link' ? 'arrow' : '';\n    },\n\n    barStyle() {\n      return {\n        color: this.color,\n        background: this.background\n      };\n    },\n\n    contentStyle() {\n      return {\n        paddingLeft: this.firstRound ? 0 : this.wrapWidth + 'px',\n        animationDelay: (this.firstRound ? this.delay : 0) + 's',\n        animationDuration: this.duration + 's'\n      };\n    }\n  },\n\n  watch: {\n    text: {\n      handler() {\n        this.$nextTick(() => {\n          const { wrap, content } = this.$refs;\n          if (!wrap || !content) {\n            return;\n          }\n\n          const wrapWidth = wrap.getBoundingClientRect().width;\n          const offsetWidth = content.getBoundingClientRect().width;\n          if (this.scrollable && offsetWidth > wrapWidth) {\n            this.wrapWidth = wrapWidth;\n            this.offsetWidth = offsetWidth;\n            this.duration = offsetWidth / this.speed;\n            this.animationClass = this.b('play');\n          }\n        });\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    onClickIcon() {\n      this.showNoticeBar = this.mode !== 'closeable';\n    },\n\n    onAnimationEnd() {\n      this.firstRound = false;\n      this.$nextTick(() => {\n        this.duration = (this.offsetWidth + this.wrapWidth) / this.speed;\n        this.animationClass = this.b('play--infinite');\n      });\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/notice-bar"}]}