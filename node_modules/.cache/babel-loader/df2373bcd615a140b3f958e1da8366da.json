{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/slider/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/slider/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport Touch from '../mixins/touch';\nexport default create({\n  name: 'slider',\n  mixins: [Touch],\n  props: {\n    disabled: Boolean,\n    max: {\n      type: Number,\n      default: 100\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    barHeight: {\n      type: String,\n      default: '2px'\n    }\n  },\n  computed: {\n    barStyle: function barStyle() {\n      return {\n        width: this.format(this.value) + '%',\n        height: this.barHeight\n      };\n    }\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      if (this.disabled) return;\n      this.touchStart(event);\n      this.startValue = this.format(this.value);\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (this.disabled) return;\n      this.touchMove(event);\n      var rect = this.$el.getBoundingClientRect();\n      var diff = this.deltaX / rect.width * 100;\n      this.updateValue(this.startValue + diff);\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (this.disabled) return;\n      this.updateValue(this.value, true);\n    },\n    onClick: function onClick(event) {\n      if (this.disabled) return;\n      var rect = this.$el.getBoundingClientRect();\n      var value = (event.clientX - rect.left) / rect.width * 100;\n      this.updateValue(value, true);\n    },\n    updateValue: function updateValue(value, end) {\n      value = this.format(value);\n      this.$emit('input', value);\n\n      if (end) {\n        this.$emit('change', value);\n      }\n    },\n    format: function format(value) {\n      return Math.round(Math.max(this.min, Math.min(value, this.max)) / this.step) * this.step;\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AAEA,eAAA,MAAA,CAAA;AACA,EAAA,IAAA,EAAA,QADA;AAGA,EAAA,MAAA,EAAA,CAAA,KAAA,CAHA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,OADA;AAEA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAFA;AAMA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KANA;AAUA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAdA;AAkBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAlBA,GALA;AA6BA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA;AACA,QAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,KAAA,IAAA,GADA;AAEA,QAAA,MAAA,EAAA,KAAA;AAFA,OAAA;AAIA;AANA,GA7BA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AACA,UAAA,KAAA,QAAA,EAAA;AAEA,WAAA,UAAA,CAAA,KAAA;AACA,WAAA,UAAA,GAAA,KAAA,MAAA,CAAA,KAAA,KAAA,CAAA;AACA,KANA;AAQA,IAAA,WARA,uBAQA,KARA,EAQA;AACA,UAAA,KAAA,QAAA,EAAA;AAEA,WAAA,SAAA,CAAA,KAAA;AACA,UAAA,IAAA,GAAA,KAAA,GAAA,CAAA,qBAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,MAAA,GAAA,IAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,WAAA,CAAA,KAAA,UAAA,GAAA,IAAA;AACA,KAfA;AAiBA,IAAA,UAjBA,wBAiBA;AACA,UAAA,KAAA,QAAA,EAAA;AACA,WAAA,WAAA,CAAA,KAAA,KAAA,EAAA,IAAA;AACA,KApBA;AAsBA,IAAA,OAtBA,mBAsBA,KAtBA,EAsBA;AACA,UAAA,KAAA,QAAA,EAAA;AAEA,UAAA,IAAA,GAAA,KAAA,GAAA,CAAA,qBAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA,KAAA,CAAA,OAAA,GAAA,IAAA,CAAA,IAAA,IAAA,IAAA,CAAA,KAAA,GAAA,GAAA;AACA,WAAA,WAAA,CAAA,KAAA,EAAA,IAAA;AACA,KA5BA;AA8BA,IAAA,WA9BA,uBA8BA,KA9BA,EA8BA,GA9BA,EA8BA;AACA,MAAA,KAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;;AAEA,UAAA,GAAA,EAAA;AACA,aAAA,KAAA,CAAA,QAAA,EAAA,KAAA;AACA;AACA,KArCA;AAuCA,IAAA,MAvCA,kBAuCA,KAvCA,EAuCA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,KAAA,GAAA,EAAA,IAAA,CAAA,GAAA,CAAA,KAAA,EAAA,KAAA,GAAA,CAAA,IAAA,KAAA,IAAA,IAAA,KAAA,IAAA;AACA;AAzCA;AAtCA,CAAA,CAAA","sourcesContent":["<template>\n  <div :class=\"b({ disabled })\" @click.stop=\"onClick\">\n    <div :class=\"b('bar')\" :style=\"barStyle\">\n      <span\n        :class=\"b('button')\"\n        @touchstart=\"onTouchStart\"\n        @touchmove.prevent.stop=\"onTouchMove\"\n        @touchend=\"onTouchEnd\"\n        @touchcancel=\"onTouchEnd\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Touch from '../mixins/touch';\n\nexport default create({\n  name: 'slider',\n\n  mixins: [Touch],\n\n  props: {\n    disabled: Boolean,\n    max: {\n      type: Number,\n      default: 100\n    },\n    min: {\n      type: Number,\n      default: 0\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    value: {\n      type: Number,\n      default: 0\n    },\n    barHeight: {\n      type: String,\n      default: '2px'\n    }\n  },\n\n  computed: {\n    barStyle() {\n      return {\n        width: this.format(this.value) + '%',\n        height: this.barHeight\n      };\n    }\n  },\n\n  methods: {\n    onTouchStart(event) {\n      if (this.disabled) return;\n\n      this.touchStart(event);\n      this.startValue = this.format(this.value);\n    },\n\n    onTouchMove(event) {\n      if (this.disabled) return;\n\n      this.touchMove(event);\n      const rect = this.$el.getBoundingClientRect();\n      const diff = this.deltaX / rect.width * 100;\n      this.updateValue(this.startValue + diff);\n    },\n\n    onTouchEnd() {\n      if (this.disabled) return;\n      this.updateValue(this.value, true);\n    },\n\n    onClick(event) {\n      if (this.disabled) return;\n\n      const rect = this.$el.getBoundingClientRect();\n      const value = (event.clientX - rect.left) / rect.width * 100;\n      this.updateValue(value, true);\n    },\n\n    updateValue(value, end) {\n      value = this.format(value);\n      this.$emit('input', value);\n\n      if (end) {\n        this.$emit('change', value);\n      }\n    },\n\n    format(value) {\n      return (Math.round(Math.max(this.min, Math.min(value, this.max)) / this.step) * this.step);\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/slider"}]}