{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/image-preview/ImagePreview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/image-preview/ImagePreview.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport Popup from '../mixins/popup';\nimport Touch from '../mixins/touch';\nimport Swipe from '../swipe';\nimport SwipeItem from '../swipe-item';\nimport { range } from '../utils';\nvar MAX_ZOOM = 3;\nvar MIN_ZOOM = 1 / 3;\nexport default create({\n  name: 'image-preview',\n  mixins: [Popup, Touch],\n  components: {\n    Swipe: Swipe,\n    SwipeItem: SwipeItem\n  },\n  props: {\n    showIndicators: Boolean,\n    images: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    startPosition: {\n      type: Number,\n      default: 0\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    showIndex: {\n      type: Boolean,\n      default: true\n    },\n    overlayClass: {\n      type: String,\n      default: 'van-image-preview__overlay'\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      active: 0\n    };\n  },\n  computed: {\n    count: function count() {\n      return this.images.length;\n    },\n    imageStyle: function imageStyle() {\n      var scale = this.scale;\n      var style = {\n        transition: this.zooming || this.moving ? '' : '.3s all'\n      };\n\n      if (scale !== 1) {\n        style.transform = \"scale3d(\".concat(scale, \", \").concat(scale, \", 1) translate(\").concat(this.moveX / scale, \"px, \").concat(this.moveY / scale, \"px)\");\n      }\n\n      return style;\n    }\n  },\n  watch: {\n    value: function value() {\n      this.active = this.startPosition;\n    },\n    startPosition: function startPosition(active) {\n      this.active = active;\n    }\n  },\n  methods: {\n    onWrapperTouchStart: function onWrapperTouchStart() {\n      this.touchStartTime = new Date();\n    },\n    onWrapperTouchEnd: function onWrapperTouchEnd(event) {\n      event.preventDefault();\n      var deltaTime = new Date() - this.touchStartTime;\n\n      var _ref = this.$refs.swipe || {},\n          _ref$offsetX = _ref.offsetX,\n          offsetX = _ref$offsetX === void 0 ? 0 : _ref$offsetX,\n          _ref$offsetY = _ref.offsetY,\n          offsetY = _ref$offsetY === void 0 ? 0 : _ref$offsetY; // prevent long tap to close component\n\n\n      if (deltaTime < 300 && offsetX < 10 && offsetY < 10) {\n        this.$emit('input', false);\n        this.resetScale();\n      }\n    },\n    getDistance: function getDistance(touches) {\n      return Math.sqrt(Math.abs((touches[0].clientX - touches[1].clientX) * (touches[0].clientY - touches[1].clientY)));\n    },\n    startMove: function startMove(event) {\n      var image = event.currentTarget;\n      var rect = image.getBoundingClientRect();\n      var winWidth = window.innerWidth;\n      var winHeight = window.innerHeight;\n      this.touchStart(event);\n      this.moving = true;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.maxMoveX = Math.max(0, (rect.width - winWidth) / 2);\n      this.maxMoveY = Math.max(0, (rect.height - winHeight) / 2);\n    },\n    startZoom: function startZoom(event) {\n      this.moving = false;\n      this.zooming = true;\n      this.startScale = this.scale;\n      this.startDistance = this.getDistance(event.touches);\n    },\n    onTouchStart: function onTouchStart(event) {\n      var touches = event.touches;\n      var offsetX = this.$refs.swipe.offsetX;\n\n      if (touches.length === 1 && this.scale !== 1) {\n        this.startMove(event);\n      }\n      /* istanbul ignore else */\n      else if (touches.length === 2 && !offsetX) {\n          this.startZoom(event);\n        }\n    },\n    onTouchMove: function onTouchMove(event) {\n      var touches = event.touches;\n\n      if (this.moving || this.zooming) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (this.moving) {\n        this.touchMove(event);\n        var moveX = this.deltaX + this.startMoveX;\n        var moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        var distance = this.getDistance(touches);\n        var scale = this.startScale * distance / this.startDistance;\n        this.scale = range(scale, MIN_ZOOM, MAX_ZOOM);\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      /* istanbul ignore else */\n      if (this.moving || this.zooming) {\n        var stopPropagation = true;\n\n        if (this.moving && this.startMoveX === this.moveX && this.startMoveY === this.moveY) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          this.moving = false;\n          this.zooming = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n\n        if (stopPropagation) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n    },\n    onChange: function onChange(active) {\n      this.resetScale();\n      this.active = active;\n    },\n    resetScale: function resetScale() {\n      this.scale = 1;\n      this.moveX = 0;\n      this.moveY = 0;\n    }\n  }\n});",{"version":3,"sources":["ImagePreview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    v-if=\"value\"\n    :class=\"b()\"\n    @touchstart=\"onWrapperTouchStart\"\n    @touchend=\"onWrapperTouchEnd\"\n    @touchcancel=\"onWrapperTouchEnd\"\n  >\n    <div v-if=\"showIndex\" :class=\"b('index')\">{{ active + 1 }}/{{ count }}</div>\n    <swipe\n      ref=\"swipe\"\n      :initial-swipe=\"startPosition\"\n      :show-indicators=\"showIndicators\"\n      @change=\"onChange\"\n    >\n      <swipe-item v-for=\"(item, index) in images\" :key=\"index\">\n        <img\n          :class=\"b('image')\"\n          :src=\"item\"\n          :style=\"index === active ? imageStyle : null\"\n          @touchstart=\"onTouchStart\"\n          @touchmove=\"onTouchMove\"\n          @touchend=\"onTouchEnd\"\n          @touchcancel=\"onTouchEnd\"\n        >\n      </swipe-item>\n    </swipe>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Popup from '../mixins/popup';\nimport Touch from '../mixins/touch';\nimport Swipe from '../swipe';\nimport SwipeItem from '../swipe-item';\nimport { range } from '../utils';\n\nconst MAX_ZOOM = 3;\nconst MIN_ZOOM = 1 / 3;\n\nexport default create({\n  name: 'image-preview',\n\n  mixins: [Popup, Touch],\n\n  components: {\n    Swipe,\n    SwipeItem\n  },\n\n  props: {\n    showIndicators: Boolean,\n    images: {\n      type: Array,\n      default: () => []\n    },\n    startPosition: {\n      type: Number,\n      default: 0\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    showIndex: {\n      type: Boolean,\n      default: true\n    },\n    overlayClass: {\n      type: String,\n      default: 'van-image-preview__overlay'\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      active: 0\n    };\n  },\n\n  computed: {\n    count() {\n      return this.images.length;\n    },\n\n    imageStyle() {\n      const { scale } = this;\n      const style = {\n        transition: this.zooming || this.moving ? '' : '.3s all'\n      };\n\n      if (scale !== 1) {\n        style.transform = `scale3d(${scale}, ${scale}, 1) translate(${this\n          .moveX / scale}px, ${this.moveY / scale}px)`;\n      }\n\n      return style;\n    }\n  },\n\n  watch: {\n    value() {\n      this.active = this.startPosition;\n    },\n\n    startPosition(active) {\n      this.active = active;\n    }\n  },\n\n  methods: {\n    onWrapperTouchStart() {\n      this.touchStartTime = new Date();\n    },\n\n    onWrapperTouchEnd(event) {\n      event.preventDefault();\n\n      const deltaTime = new Date() - this.touchStartTime;\n      const { offsetX = 0, offsetY = 0 } = this.$refs.swipe || {};\n\n      // prevent long tap to close component\n      if (deltaTime < 300 && offsetX < 10 && offsetY < 10) {\n        this.$emit('input', false);\n        this.resetScale();\n      }\n    },\n\n    getDistance(touches) {\n      return Math.sqrt(\n        Math.abs(\n          (touches[0].clientX - touches[1].clientX) *\n            (touches[0].clientY - touches[1].clientY)\n        )\n      );\n    },\n\n    startMove(event) {\n      const image = event.currentTarget;\n      const rect = image.getBoundingClientRect();\n      const winWidth = window.innerWidth;\n      const winHeight = window.innerHeight;\n\n      this.touchStart(event);\n      this.moving = true;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.maxMoveX = Math.max(0, (rect.width - winWidth) / 2);\n      this.maxMoveY = Math.max(0, (rect.height - winHeight) / 2);\n    },\n\n    startZoom(event) {\n      this.moving = false;\n      this.zooming = true;\n      this.startScale = this.scale;\n      this.startDistance = this.getDistance(event.touches);\n    },\n\n    onTouchStart(event) {\n      const { touches } = event;\n      const { offsetX } = this.$refs.swipe;\n\n      if (touches.length === 1 && this.scale !== 1) {\n        this.startMove(event);\n      } /* istanbul ignore else */ else if (touches.length === 2 && !offsetX) {\n        this.startZoom(event);\n      }\n    },\n\n    onTouchMove(event) {\n      const { touches } = event;\n      if (this.moving || this.zooming) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      if (this.moving) {\n        this.touchMove(event);\n        const moveX = this.deltaX + this.startMoveX;\n        const moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        const distance = this.getDistance(touches);\n        const scale = (this.startScale * distance) / this.startDistance;\n        this.scale = range(scale, MIN_ZOOM, MAX_ZOOM);\n      }\n    },\n\n    onTouchEnd(event) {\n      /* istanbul ignore else */\n      if (this.moving || this.zooming) {\n        let stopPropagation = true;\n\n        if (\n          this.moving &&\n          this.startMoveX === this.moveX &&\n          this.startMoveY === this.moveY\n        ) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          this.moving = false;\n          this.zooming = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n\n        if (stopPropagation) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n      }\n    },\n\n    onChange(active) {\n      this.resetScale();\n      this.active = active;\n    },\n\n    resetScale() {\n      this.scale = 1;\n      this.moveX = 0;\n      this.moveY = 0;\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/image-preview"}]}