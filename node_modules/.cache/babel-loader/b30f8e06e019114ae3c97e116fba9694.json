{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/area/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/area/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport Picker from '../picker';\nexport default create({\n  name: 'area',\n  components: {\n    Picker: Picker\n  },\n  props: {\n    value: String,\n    title: String,\n    loading: Boolean,\n    itemHeight: Number,\n    visibleItemCount: Number,\n    areaList: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    columnsNum: {\n      type: [String, Number],\n      default: 3\n    }\n  },\n  data: function data() {\n    return {\n      code: this.value,\n      columns: [{\n        values: []\n      }, {\n        values: []\n      }, {\n        values: []\n      }]\n    };\n  },\n  computed: {\n    province: function province() {\n      return this.areaList.province_list || {};\n    },\n    city: function city() {\n      return this.areaList.city_list || {};\n    },\n    county: function county() {\n      return this.areaList.county_list || {};\n    },\n    displayColumns: function displayColumns() {\n      return this.columns.slice(0, +this.columnsNum);\n    }\n  },\n  watch: {\n    value: function value() {\n      this.code = this.value;\n      this.setValues();\n    },\n    areaList: {\n      deep: true,\n      handler: function handler() {\n        this.setValues();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.setValues();\n  },\n  methods: {\n    // get list by code\n    getList: function getList(type, code) {\n      var result = [];\n\n      if (type !== 'province' && !code) {\n        return result;\n      }\n\n      var list = this[type];\n      result = Object.keys(list).map(function (code) {\n        return {\n          code: code,\n          name: list[code]\n        };\n      });\n\n      if (code) {\n        // oversea code\n        if (code[0] === '9' && type === 'city') {\n          code = '9';\n        }\n\n        result = result.filter(function (item) {\n          return item.code.indexOf(code) === 0;\n        });\n      }\n\n      return result;\n    },\n    // get index by code\n    getIndex: function getIndex(type, code) {\n      var compareNum = type === 'province' ? 2 : type === 'city' ? 4 : 6;\n      var list = this.getList(type, code.slice(0, compareNum - 2)); // oversea code\n\n      if (code[0] === '9' && type === 'province') {\n        compareNum = 1;\n      }\n\n      code = code.slice(0, compareNum);\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].code.slice(0, compareNum) === code) {\n          return i;\n        }\n      }\n\n      return 0;\n    },\n    onChange: function onChange(picker, values, index) {\n      this.code = values[index].code;\n      this.setValues();\n      this.$emit('change', picker, values, index);\n    },\n    setValues: function setValues() {\n      var code = this.code || Object.keys(this.county)[0] || '';\n      var picker = this.$refs.picker;\n      var province = this.getList('province');\n      var city = this.getList('city', code.slice(0, 2));\n\n      if (!picker) {\n        return;\n      }\n\n      picker.setColumnValues(0, province);\n      picker.setColumnValues(1, city);\n\n      if (city.length && code.slice(2, 4) === '00') {\n        code = city[0].code;\n      }\n\n      picker.setColumnValues(2, this.getList('county', code.slice(0, 4)));\n      picker.setIndexes([this.getIndex('province', code), this.getIndex('city', code), this.getIndex('county', code)]);\n    },\n    getValues: function getValues() {\n      return this.$refs.picker ? this.$refs.picker.getValues().filter(function (value) {\n        return !!value;\n      }) : [];\n    },\n    getArea: function getArea() {\n      var values = this.getValues();\n      var area = {\n        code: '',\n        country: '',\n        province: '',\n        city: '',\n        county: ''\n      };\n\n      if (!values.length) {\n        return area;\n      }\n\n      var names = values.map(function (item) {\n        return item.name;\n      });\n      area.code = values[values.length - 1].code;\n\n      if (area.code[0] === '9') {\n        area.country = names[1] || '';\n        area.province = names[2] || '';\n      } else {\n        area.province = names[0] || '';\n        area.city = names[1] || '';\n        area.county = names[2] || '';\n      }\n\n      return area;\n    },\n    reset: function reset() {\n      this.code = '';\n      this.setValues();\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <picker\n    ref=\"picker\"\n    :class=\"b()\"\n    show-toolbar\n    value-key=\"name\"\n    :title=\"title\"\n    :loading=\"loading\"\n    :columns=\"displayColumns\"\n    :item-height=\"itemHeight\"\n    :visible-item-count=\"visibleItemCount\"\n    @change=\"onChange\"\n    @confirm=\"$emit('confirm', $event)\"\n    @cancel=\"$emit('cancel', $event)\"\n  />\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Picker from '../picker';\n\nexport default create({\n  name: 'area',\n\n  components: {\n    Picker\n  },\n\n  props: {\n    value: String,\n    title: String,\n    loading: Boolean,\n    itemHeight: Number,\n    visibleItemCount: Number,\n    areaList: {\n      type: Object,\n      default: () => ({})\n    },\n    columnsNum: {\n      type: [String, Number],\n      default: 3\n    }\n  },\n\n  data() {\n    return {\n      code: this.value,\n      columns: [{ values: [] }, { values: [] }, { values: [] }]\n    };\n  },\n\n  computed: {\n    province() {\n      return this.areaList.province_list || {};\n    },\n\n    city() {\n      return this.areaList.city_list || {};\n    },\n\n    county() {\n      return this.areaList.county_list || {};\n    },\n\n    displayColumns() {\n      return this.columns.slice(0, +this.columnsNum);\n    }\n  },\n\n  watch: {\n    value() {\n      this.code = this.value;\n      this.setValues();\n    },\n\n    areaList: {\n      deep: true,\n      handler() {\n        this.setValues();\n      }\n    }\n  },\n\n  mounted() {\n    this.setValues();\n  },\n\n  methods: {\n    // get list by code\n    getList(type, code) {\n      let result = [];\n      if (type !== 'province' && !code) {\n        return result;\n      }\n\n      const list = this[type];\n      result = Object.keys(list).map(code => ({\n        code,\n        name: list[code]\n      }));\n\n      if (code) {\n        // oversea code\n        if (code[0] === '9' && type === 'city') {\n          code = '9';\n        }\n\n        result = result.filter(item => item.code.indexOf(code) === 0);\n      }\n\n      return result;\n    },\n\n    // get index by code\n    getIndex(type, code) {\n      let compareNum = type === 'province' ? 2 : type === 'city' ? 4 : 6;\n      const list = this.getList(type, code.slice(0, compareNum - 2));\n\n      // oversea code\n      if (code[0] === '9' && type === 'province') {\n        compareNum = 1;\n      }\n\n      code = code.slice(0, compareNum);\n      for (let i = 0; i < list.length; i++) {\n        if (list[i].code.slice(0, compareNum) === code) {\n          return i;\n        }\n      }\n\n      return 0;\n    },\n\n    onChange(picker, values, index) {\n      this.code = values[index].code;\n      this.setValues();\n      this.$emit('change', picker, values, index);\n    },\n\n    setValues() {\n      let code = this.code || Object.keys(this.county)[0] || '';\n      const { picker } = this.$refs;\n      const province = this.getList('province');\n      const city = this.getList('city', code.slice(0, 2));\n\n      if (!picker) {\n        return;\n      }\n\n      picker.setColumnValues(0, province);\n      picker.setColumnValues(1, city);\n\n      if (city.length && code.slice(2, 4) === '00') {\n        code = city[0].code;\n      }\n\n      picker.setColumnValues(2, this.getList('county', code.slice(0, 4)));\n      picker.setIndexes([\n        this.getIndex('province', code),\n        this.getIndex('city', code),\n        this.getIndex('county', code)\n      ]);\n    },\n\n    getValues() {\n      return this.$refs.picker ? this.$refs.picker.getValues().filter(value => !!value) : [];\n    },\n\n    getArea() {\n      const values = this.getValues();\n      const area = {\n        code: '',\n        country: '',\n        province: '',\n        city: '',\n        county: ''\n      };\n\n      if (!values.length) {\n        return area;\n      }\n\n      const names = values.map(item => item.name);\n\n      area.code = values[values.length - 1].code;\n      if (area.code[0] === '9') {\n        area.country = names[1] || '';\n        area.province = names[2] || '';\n      } else {\n        area.province = names[0] || '';\n        area.city = names[1] || '';\n        area.county = names[2] || '';\n      }\n\n      return area;\n    },\n\n    reset() {\n      this.code = '';\n      this.setValues();\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/area"}]}