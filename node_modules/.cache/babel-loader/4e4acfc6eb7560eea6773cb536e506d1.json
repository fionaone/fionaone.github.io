{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/stepper/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/stepper/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nexport default create({\n  name: 'stepper',\n  props: {\n    value: null,\n    integer: Boolean,\n    disabled: Boolean,\n    disableInput: Boolean,\n    min: {\n      type: [String, Number],\n      default: 0\n    },\n    max: {\n      type: [String, Number],\n      default: Infinity\n    },\n    step: {\n      type: [String, Number],\n      default: 1\n    },\n    defaultValue: {\n      type: [String, Number],\n      default: 1\n    }\n  },\n  data: function data() {\n    var value = this.range(this.isDef(this.value) ? this.value : this.defaultValue);\n\n    if (value !== +this.value) {\n      this.$emit('input', value);\n    }\n\n    return {\n      currentValue: value\n    };\n  },\n  computed: {\n    minusDisabled: function minusDisabled() {\n      return this.disabled || this.currentValue <= this.min;\n    },\n    plusDisabled: function plusDisabled() {\n      return this.disabled || this.currentValue >= this.max;\n    }\n  },\n  watch: {\n    value: function value(val) {\n      if (val !== this.currentValue) {\n        this.currentValue = this.format(val);\n      }\n    },\n    currentValue: function currentValue(val) {\n      this.$emit('input', val);\n      this.$emit('change', val);\n    }\n  },\n  methods: {\n    // filterBar illegal characters\n    format: function format(value) {\n      value = String(value).replace(/[^0-9\\.-]/g, '');\n      return value === '' ? 0 : this.integer ? Math.floor(value) : +value;\n    },\n    // limit value range\n    range: function range(value) {\n      return Math.max(Math.min(this.max, this.format(value)), this.min);\n    },\n    onInput: function onInput(event) {\n      var value = event.target.value;\n      var formatted = this.format(value);\n\n      if (+value !== formatted) {\n        event.target.value = formatted;\n      }\n\n      this.currentValue = formatted;\n    },\n    onChange: function onChange(type) {\n      if (this[\"\".concat(type, \"Disabled\")]) {\n        this.$emit('overlimit', type);\n        return;\n      }\n\n      var diff = type === 'minus' ? -this.step : +this.step;\n      var value = Math.round((this.currentValue + diff) * 100) / 100;\n      this.currentValue = this.range(value);\n      this.$emit(type);\n    },\n    onBlur: function onBlur(event) {\n      this.currentValue = this.range(this.currentValue);\n      this.$emit('blur', event);\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <button\n      :class=\"b('minus', { disabled: minusDisabled })\"\n      @click=\"onChange('minus')\"\n    />\n    <input\n      type=\"number\"\n      readonly\n      :class=\"b('input',{'vhide':value<=0})\"\n      :value=\"currentValue\"\n      @input=\"onInput\"\n      @blur=\"onBlur\"\n    >\n    <button\n      :class=\"b('plus', { disabled: plusDisabled })\"\n      @click=\"onChange('plus')\"\n    />\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'stepper',\n\n  props: {\n    value: null,\n    integer: Boolean,\n    disabled: Boolean,\n    disableInput: Boolean,\n    min: {\n      type: [String, Number],\n      default: 0\n    },\n    max: {\n      type: [String, Number],\n      default: Infinity\n    },\n    step: {\n      type: [String, Number],\n      default: 1\n    },\n    defaultValue: {\n      type: [String, Number],\n      default: 1\n    }\n  },\n\n  data() {\n    const value = this.range(this.isDef(this.value) ? this.value : this.defaultValue);\n    if (value !== +this.value) {\n      this.$emit('input', value);\n    }\n\n    return {\n      currentValue: value\n    };\n  },\n\n  computed: {\n    minusDisabled() {\n      return this.disabled || this.currentValue <= this.min;\n    },\n\n    plusDisabled() {\n      return this.disabled || this.currentValue >= this.max;\n    }\n  },\n\n  watch: {\n    value(val) {\n      if (val !== this.currentValue) {\n        this.currentValue = this.format(val);\n      }\n    },\n\n    currentValue(val) {\n      this.$emit('input', val);\n      this.$emit('change', val);\n    }\n  },\n\n  methods: {\n    // filterBar illegal characters\n    format(value) {\n      value = String(value).replace(/[^0-9\\.-]/g, '');\n      return value === '' ? 0 : this.integer ? Math.floor(value) : +value;\n    },\n\n    // limit value range\n    range(value) {\n      return Math.max(Math.min(this.max, this.format(value)), this.min);\n    },\n\n    onInput(event) {\n      const { value } = event.target;\n      const formatted = this.format(value);\n\n      if (+value !== formatted) {\n        event.target.value = formatted;\n      }\n\n      this.currentValue = formatted;\n    },\n\n    onChange(type) {\n      if (this[`${type}Disabled`]) {\n        this.$emit('overlimit', type);\n        return;\n      }\n\n      const diff = type === 'minus' ? -this.step : +this.step;\n      const value = Math.round((this.currentValue + diff) * 100) / 100;\n      this.currentValue = this.range(value);\n      this.$emit(type);\n    },\n\n    onBlur(event) {\n      this.currentValue = this.range(this.currentValue);\n      this.$emit('blur', event);\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/stepper"}]}