{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/dialog/Dialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/dialog/Dialog.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport VanButton from '../button';\nimport Popup from '../mixins/popup';\nexport default create({\n  name: 'dialog',\n  components: {\n    VanButton: VanButton\n  },\n  mixins: [Popup],\n  props: {\n    title: String,\n    message: String,\n    callback: Function,\n    className: [String, Object, Array],\n    beforeClose: Function,\n    confirmButtonText: String,\n    cancelButtonText: String,\n    showCancelButton: Boolean,\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n  methods: {\n    handleAction: function handleAction(action) {\n      var _this = this;\n\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, function (state) {\n          if (state !== false) {\n            _this.onClose(action);\n          }\n\n          _this.loading[action] = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n    onClose: function onClose(action) {\n      this.$emit('input', false);\n      this.$emit(action);\n      this.callback && this.callback(action);\n    }\n  }\n});",{"version":3,"sources":["Dialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,SAAA,MAAA,WAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AAEA,eAAA,MAAA,CAAA;AACA,EAAA,IAAA,EAAA,QADA;AAGA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA;AADA,GAHA;AAOA,EAAA,MAAA,EAAA,CAAA,KAAA,CAPA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,OAAA,EAAA,MAFA;AAGA,IAAA,QAAA,EAAA,QAHA;AAIA,IAAA,SAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,CAJA;AAKA,IAAA,WAAA,EAAA,QALA;AAMA,IAAA,iBAAA,EAAA,MANA;AAOA,IAAA,gBAAA,EAAA,MAPA;AAQA,IAAA,gBAAA,EAAA,OARA;AASA,IAAA,iBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,mBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAjBA,GATA;AAgCA,EAAA,IAhCA,kBAgCA;AACA,WAAA;AACA,MAAA,OAAA,EAAA;AACA,QAAA,OAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA;AAFA;AADA,KAAA;AAMA,GAvCA;AAyCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AAAA;;AACA,UAAA,KAAA,WAAA,EAAA;AACA,aAAA,OAAA,CAAA,MAAA,IAAA,IAAA;AACA,aAAA,WAAA,CAAA,MAAA,EAAA,UAAA,KAAA,EAAA;AACA,cAAA,KAAA,KAAA,KAAA,EAAA;AACA,YAAA,KAAA,CAAA,OAAA,CAAA,MAAA;AACA;;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,MAAA,IAAA,KAAA;AACA,SALA;AAMA,OARA,MAQA;AACA,aAAA,OAAA,CAAA,MAAA;AACA;AACA,KAbA;AAeA,IAAA,OAfA,mBAeA,MAfA,EAeA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA;AACA,WAAA,KAAA,CAAA,MAAA;AACA,WAAA,QAAA,IAAA,KAAA,QAAA,CAAA,MAAA,CAAA;AACA;AAnBA;AAzCA,CAAA,CAAA","sourcesContent":["<template>\n  <transition name=\"x-dialog-bounce\">\n    <div v-show=\"value\" :class=\"[b(), className]\">\n      <div v-if=\"title\" v-text=\"title\" :class=\"b('header', { isolated: !message && !$slots.default })\" />\n      <div :class=\"b('content')\" v-if=\"message || $slots.default\">\n        <slot>\n          <div v-if=\"message\" v-html=\"message\" :class=\"b('message', { 'has-title': title })\" />\n        </slot>\n      </div>\n      <div class=\"x-hairline--top\" :class=\"b('footer', { 'buttons': showCancelButton && showConfirmButton })\">\n        <x-button\n          v-show=\"showCancelButton\"\n          :loading=\"loading.cancel\"\n          size=\"large\"\n          :class=\"b('cancel')\"\n          @click=\"handleAction('cancel')\"\n        >\n          {{ cancelButtonText || $t('cancel') }}\n        </x-button>\n        <x-button\n          v-show=\"showConfirmButton\"\n          size=\"large\"\n          :loading=\"loading.confirm\"\n          :class=\"[b('confirm'), { 'x-hairline--left': showCancelButton && showConfirmButton }]\"\n          @click=\"handleAction('confirm')\"\n        >\n          {{ confirmButtonText || $t('confirm') }}\n        </x-button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport VanButton from '../button';\nimport Popup from '../mixins/popup';\n\nexport default create({\n  name: 'dialog',\n\n  components: {\n    VanButton\n  },\n\n  mixins: [Popup],\n\n  props: {\n    title: String,\n    message: String,\n    callback: Function,\n    className: [String, Object, Array],\n    beforeClose: Function,\n    confirmButtonText: String,\n    cancelButtonText: String,\n    showCancelButton: Boolean,\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n\n  methods: {\n    handleAction(action) {\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, state => {\n          if (state !== false) {\n            this.onClose(action);\n          }\n          this.loading[action] = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n\n    onClose(action) {\n      this.$emit('input', false);\n      this.$emit(action);\n      this.callback && this.callback(action);\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/dialog"}]}