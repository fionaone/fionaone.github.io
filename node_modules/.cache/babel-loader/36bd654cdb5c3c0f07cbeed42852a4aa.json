{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/sku/components/SkuStepper.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/sku/components/SkuStepper.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../../utils/create';\nimport Stepper from '../../stepper';\nimport { LIMIT_TYPE } from '../constants';\nvar QUOTA_LIMIT = LIMIT_TYPE.QUOTA_LIMIT,\n    STOCK_LIMIT = LIMIT_TYPE.STOCK_LIMIT;\nexport default create({\n  name: 'sku-stepper',\n  components: {\n    Stepper: Stepper\n  },\n  props: {\n    skuEventBus: Object,\n    skuStockNum: Number,\n    selectedSku: Object,\n    selectedSkuComb: Object,\n    selectedNum: Number,\n    stepperTitle: String,\n    quota: Number,\n    quotaUsed: Number,\n    hideStock: Boolean,\n    disableStepperInput: Boolean,\n    customStepperConfig: Object\n  },\n  data: function data() {\n    return {\n      currentNum: this.selectedNum,\n      // 购买限制类型: 限购/库存\n      limitType: STOCK_LIMIT\n    };\n  },\n  watch: {\n    currentNum: function currentNum(num) {\n      this.skuEventBus.$emit('sku:numChange', num);\n    },\n    stepperLimit: function stepperLimit(limit) {\n      if (limit < this.currentNum) {\n        this.currentNum = limit;\n      }\n    }\n  },\n  computed: {\n    stock: function stock() {\n      if (this.selectedSkuComb) {\n        return this.selectedSkuComb.stock_num;\n      }\n\n      return this.skuStockNum;\n    },\n    stockText: function stockText() {\n      var stockFormatter = this.customStepperConfig.stockFormatter;\n      if (stockFormatter) return stockFormatter(this.stock);\n      return \"\\u5269\\u4F59\".concat(this.stock, \"\\u4EF6\");\n    },\n    quotaText: function quotaText() {\n      var quotaText = this.customStepperConfig.quotaText;\n      var text = '';\n\n      if (quotaText) {\n        text = quotaText;\n      } else if (this.quota > 0) {\n        text = \"\\u6BCF\\u4EBA\\u9650\\u8D2D\".concat(this.quota, \"\\u4EF6\");\n      }\n\n      return text;\n    },\n    stepperLimit: function stepperLimit() {\n      var quotaLimit = this.quota - this.quotaUsed;\n      var limit; // 无限购时直接取库存，有限购时取限购数和库存数中小的那个\n\n      if (this.quota > 0 && quotaLimit <= this.stock) {\n        // 修正负的limit\n        limit = quotaLimit < 0 ? 0 : quotaLimit;\n        this.limitType = QUOTA_LIMIT;\n      } else {\n        limit = this.stock;\n        this.limitType = STOCK_LIMIT;\n      }\n\n      return limit;\n    }\n  },\n  methods: {\n    setCurrentNum: function setCurrentNum(num) {\n      this.currentNum = num;\n    },\n    onOverLimit: function onOverLimit(action) {\n      this.skuEventBus.$emit('sku:overLimit', {\n        action: action,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed\n      });\n    },\n    onChange: function onChange(currentValue) {\n      var handleStepperChange = this.customStepperConfig.handleStepperChange;\n      handleStepperChange && handleStepperChange(currentValue);\n      this.$emit('change', currentValue);\n    }\n  }\n});",{"version":3,"sources":["SkuStepper.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"van-sku-stepper-stock\">\n    <div class=\"van-sku-stepper-container\">\n      <div class=\"van-sku__stepper-title\">{{ stepperTitle || '购买数量' }}：</div>\n      <stepper\n        class=\"van-sku__stepper\"\n        v-model=\"currentNum\"\n        :min=\"1\"\n        :max=\"stepperLimit\"\n        :disable-input=\"disableStepperInput\"\n        @overlimit=\"onOverLimit\"\n        @change=\"onChange\"\n      />\n    </div>\n    <div v-if=\"!hideStock\" class=\"van-sku__stock\">{{ stockText }}</div>\n    <div v-if=\"quotaText\" class=\"van-sku__quota\">{{ quotaText }}</div>\n  </div>\n</template>\n\n<script>\nimport create from '../../utils/create';\nimport Stepper from '../../stepper';\nimport { LIMIT_TYPE } from '../constants';\n\nconst { QUOTA_LIMIT, STOCK_LIMIT } = LIMIT_TYPE;\n\nexport default create({\n  name: 'sku-stepper',\n\n  components: {\n    Stepper\n  },\n\n  props: {\n    skuEventBus: Object,\n    skuStockNum: Number,\n    selectedSku: Object,\n    selectedSkuComb: Object,\n    selectedNum: Number,\n    stepperTitle: String,\n    quota: Number,\n    quotaUsed: Number,\n    hideStock: Boolean,\n    disableStepperInput: Boolean,\n    customStepperConfig: Object\n  },\n\n  data() {\n    return {\n      currentNum: this.selectedNum,\n      // 购买限制类型: 限购/库存\n      limitType: STOCK_LIMIT\n    };\n  },\n\n  watch: {\n    currentNum(num) {\n      this.skuEventBus.$emit('sku:numChange', num);\n    },\n\n    stepperLimit(limit) {\n      if (limit < this.currentNum) {\n        this.currentNum = limit;\n      }\n    }\n  },\n\n  computed: {\n    stock() {\n      if (this.selectedSkuComb) {\n        return this.selectedSkuComb.stock_num;\n      }\n      return this.skuStockNum;\n    },\n\n    stockText() {\n      const { stockFormatter } = this.customStepperConfig;\n      if (stockFormatter) return stockFormatter(this.stock);\n\n      return `剩余${this.stock}件`;\n    },\n\n    quotaText() {\n      const { quotaText } = this.customStepperConfig;\n      let text = '';\n\n      if (quotaText) {\n        text = quotaText;\n      } else if (this.quota > 0) {\n        text = `每人限购${this.quota}件`;\n      }\n\n      return text;\n    },\n\n    stepperLimit() {\n      const quotaLimit = this.quota - this.quotaUsed;\n      let limit;\n\n      // 无限购时直接取库存，有限购时取限购数和库存数中小的那个\n      if (this.quota > 0 && quotaLimit <= this.stock) {\n        // 修正负的limit\n        limit = quotaLimit < 0 ? 0 : quotaLimit;\n        this.limitType = QUOTA_LIMIT;\n      } else {\n        limit = this.stock;\n        this.limitType = STOCK_LIMIT;\n      }\n\n      return limit;\n    }\n  },\n\n  methods: {\n    setCurrentNum(num) {\n      this.currentNum = num;\n    },\n\n    onOverLimit(action) {\n      this.skuEventBus.$emit('sku:overLimit', {\n        action,\n        limitType: this.limitType,\n        quota: this.quota,\n        quotaUsed: this.quotaUsed\n      });\n    },\n\n    onChange(currentValue) {\n      const { handleStepperChange } = this.customStepperConfig;\n      handleStepperChange && handleStepperChange(currentValue);\n      this.$emit('change', currentValue);\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/sku/components"}]}