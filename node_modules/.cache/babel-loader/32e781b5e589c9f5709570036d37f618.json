{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/address-edit/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/address-edit/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _objectSpread from \"/Users/zsy/Projects/about_me/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable camelcase */\nimport create from '../utils/create';\nimport { isObj } from '../utils';\nimport Field from '../field';\nimport VanButton from '../button';\nimport Popup from '../popup';\nimport Toast from '../toast';\nimport Dialog from '../dialog';\nimport VanArea from '../area';\nimport AddressEditDetail from './Detail';\nimport SwitchCell from '../switch-cell';\nimport validateMobile from '../utils/validate/mobile';\nvar defaultData = {\n  name: '',\n  tel: '',\n  country: '',\n  province: '',\n  city: '',\n  county: '',\n  areaCode: '',\n  postalCode: '',\n  addressDetail: '',\n  isDefault: false\n};\nexport default create({\n  name: 'address-edit',\n  components: {\n    Field: Field,\n    Popup: Popup,\n    VanArea: VanArea,\n    VanButton: VanButton,\n    SwitchCell: SwitchCell,\n    AddressEditDetail: AddressEditDetail\n  },\n  props: {\n    areaList: Object,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    validator: Function,\n    showDelete: Boolean,\n    showPostal: Boolean,\n    showSetDefault: Boolean,\n    showSearchResult: Boolean,\n    saveButtonText: String,\n    deleteButtonText: String,\n    showArea: {\n      type: Boolean,\n      default: true\n    },\n    showDetail: {\n      type: Boolean,\n      default: true\n    },\n    detailRows: {\n      type: Number,\n      default: 1\n    },\n    addressInfo: {\n      type: Object,\n      default: function _default() {\n        return _objectSpread({}, defaultData);\n      }\n    },\n    searchResult: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n  data: function data() {\n    return {\n      data: {},\n      showAreaPopup: false,\n      detailFocused: false,\n      errorInfo: {\n        tel: false,\n        name: false,\n        postalCode: false,\n        addressDetail: false\n      }\n    };\n  },\n  computed: {\n    // hide bottom field when use search && detail get focused\n    hideBottomFields: function hideBottomFields() {\n      return this.searchResult.length && this.detailFocused;\n    },\n    areaListLoaded: function areaListLoaded() {\n      return isObj(this.areaList) && Object.keys(this.areaList).length;\n    },\n    areaText: function areaText() {\n      var _this$data = this.data,\n          country = _this$data.country,\n          province = _this$data.province,\n          city = _this$data.city,\n          county = _this$data.county,\n          areaCode = _this$data.areaCode;\n\n      if (areaCode) {\n        var arr = [country, province, city, county];\n\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n\n        return arr.filter(function (text) {\n          return text;\n        }).join('/');\n      }\n\n      return '';\n    }\n  },\n  watch: {\n    addressInfo: {\n      handler: function handler(val) {\n        this.data = _objectSpread({}, defaultData, val);\n        this.setAreaCode(val.areaCode);\n      },\n      deep: true,\n      immediate: true\n    },\n    areaList: function areaList() {\n      this.setAreaCode(this.data.areaCode);\n    }\n  },\n  methods: {\n    onFocus: function onFocus(key) {\n      this.errorInfo[key] = false;\n      this.detailFocused = key === 'addressDetail';\n      this.$emit('focus', key);\n    },\n    onChangeDetail: function onChangeDetail(val) {\n      this.data.addressDetail = val;\n      this.$emit('change-detail', val);\n    },\n    onAreaConfirm: function onAreaConfirm(values) {\n      this.showAreaPopup = false;\n      this.assignAreaValues();\n      this.$emit('change-area', values);\n    },\n    assignAreaValues: function assignAreaValues(values) {\n      var area = this.$refs.area;\n\n      if (area) {\n        var detail = area.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        Object.assign(this.data, detail);\n      }\n    },\n    onSave: function onSave() {\n      var _this = this;\n\n      var items = ['name', 'tel', 'areaCode', 'addressDetail'];\n\n      if (this.showPostal) {\n        items.push('postalCode');\n      }\n\n      var isValid = items.every(function (item) {\n        var msg = _this.getErrorMessage(item);\n\n        if (msg) {\n          _this.errorInfo[item] = true;\n          Toast(msg);\n        }\n\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n    getErrorMessage: function getErrorMessage(key) {\n      var value = String(this.data[key] || '').trim();\n      var $t = this.$t;\n\n      if (this.validator) {\n        var message = this.validator(key, value);\n\n        if (message) {\n          return message;\n        }\n      }\n\n      switch (key) {\n        case 'name':\n          return value ? '' : $t('nameEmpty');\n\n        case 'tel':\n          return this.telValidator(value) ? '' : $t('telInvalid');\n\n        case 'areaCode':\n          return value ? '' : $t('areaEmpty');\n\n        case 'addressDetail':\n          return value ? '' : $t('addressEmpty');\n\n        case 'postalCode':\n          return value && !/^\\d{6}$/.test(value) ? $t('postalEmpty') : '';\n      }\n    },\n    onDelete: function onDelete() {\n      var _this2 = this;\n\n      Dialog.confirm({\n        title: this.$t('confirmDelete')\n      }).then(function () {\n        _this2.$emit('delete', _this2.data);\n      }).catch(function () {\n        _this2.$emit('cancel-delete', _this2.data);\n      });\n    },\n    // get values of area component\n    getArea: function getArea() {\n      return this.$refs.area ? this.$refs.area.getValues() : [];\n    },\n    // set area code to area component\n    setAreaCode: function setAreaCode(code) {\n      this.data.areaCode = code || '';\n      code && this.$nextTick(this.assignAreaValues);\n    },\n    setAddressDetail: function setAddressDetail(value) {\n      this.data.addressDetail = value;\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <cell-group>\n      <field\n        v-model=\"data.name\"\n        clearable\n        :label=\"$t('name')\"\n        :placeholder=\"$t('namePlaceholder')\"\n        :error=\"errorInfo.name\"\n        @focus=\"onFocus('name')\"\n      />\n      <field\n        v-model=\"data.tel\"\n        clearable\n        type=\"tel\"\n        :label=\"$t('tel')\"\n        :placeholder=\"$t('telPlaceholder')\"\n        :error=\"errorInfo.tel\"\n        @focus=\"onFocus('tel')\"\n      />\n      <field\n        v-show=\"showArea\"\n        readonly\n        :label=\"$t('area')\"\n        :placeholder=\"$t('areaPlaceholder')\"\n        :value=\"areaText\"\n        @click=\"showAreaPopup = true\"\n      />\n      <address-edit-detail\n        v-show=\"showDetail\"\n        :focused=\"detailFocused\"\n        :value=\"data.addressDetail\"\n        :error=\"errorInfo.addressDetail\"\n        :detail-rows=\"detailRows\"\n        :search-result=\"searchResult\"\n        :show-search-result=\"showSearchResult\"\n        @focus=\"onFocus('addressDetail')\"\n        @blur=\"detailFocused = false\"\n        @input=\"onChangeDetail\"\n        @select-search=\"$emit('select-search', $event)\"\n      />\n      <field\n        v-if=\"showPostal\"\n        v-show=\"!hideBottomFields\"\n        v-model=\"data.postalCode\"\n        type=\"tel\"\n        maxlength=\"6\"\n        :label=\"$t('postal')\"\n        :placeholder=\"$t('postal')\"\n        :error=\"errorInfo.postalCode\"\n        @focus=\"onFocus('postalCode')\"\n      />\n      <slot />\n      <switch-cell\n        v-if=\"showSetDefault\"\n        v-show=\"!hideBottomFields\"\n        v-model=\"data.isDefault\"\n        :title=\"$t('defaultAddress')\"\n        @change=\"$emit('change-default', $event)\"\n      />\n    </cell-group>\n\n    <div v-show=\"!hideBottomFields\" :class=\"b('buttons')\">\n      <x-button block :loading=\"isSaving\" @click=\"onSave\" type=\"danger\">\n        {{ saveButtonText || $t('save') }}\n      </x-button>\n      <x-button block :loading=\"isDeleting\" @click=\"onDelete\" v-if=\"showDelete\">\n        {{ deleteButtonText || $t('delete') }}\n      </x-button>\n    </div>\n\n    <popup v-model=\"showAreaPopup\" position=\"bottom\" :lazy-render=\"false\" get-container=\"body\">\n      <x-area\n        ref=\"area\"\n        :loading=\"!areaListLoaded\"\n        :value=\"data.areaCode\"\n        :area-list=\"areaList\"\n        @confirm=\"onAreaConfirm\"\n        @cancel=\"showAreaPopup = false\"\n      />\n    </popup>\n  </div>\n</template>\n\n<script>\n/* eslint-disable camelcase */\nimport create from '../utils/create';\nimport { isObj } from '../utils';\nimport Field from '../field';\nimport VanButton from '../button';\nimport Popup from '../popup';\nimport Toast from '../toast';\nimport Dialog from '../dialog';\nimport VanArea from '../area';\nimport AddressEditDetail from './Detail';\nimport SwitchCell from '../switch-cell';\nimport validateMobile from '../utils/validate/mobile';\n\nconst defaultData = {\n  name: '',\n  tel: '',\n  country: '',\n  province: '',\n  city: '',\n  county: '',\n  areaCode: '',\n  postalCode: '',\n  addressDetail: '',\n  isDefault: false\n};\n\nexport default create({\n  name: 'address-edit',\n\n  components: {\n    Field,\n    Popup,\n    VanArea,\n    VanButton,\n    SwitchCell,\n    AddressEditDetail\n  },\n\n  props: {\n    areaList: Object,\n    isSaving: Boolean,\n    isDeleting: Boolean,\n    validator: Function,\n    showDelete: Boolean,\n    showPostal: Boolean,\n    showSetDefault: Boolean,\n    showSearchResult: Boolean,\n    saveButtonText: String,\n    deleteButtonText: String,\n    showArea: {\n      type: Boolean,\n      default: true\n    },\n    showDetail: {\n      type: Boolean,\n      default: true\n    },\n    detailRows: {\n      type: Number,\n      default: 1\n    },\n    addressInfo: {\n      type: Object,\n      default: () => ({ ...defaultData })\n    },\n    searchResult: {\n      type: Array,\n      default: () => []\n    },\n    telValidator: {\n      type: Function,\n      default: validateMobile\n    }\n  },\n\n  data() {\n    return {\n      data: {},\n      showAreaPopup: false,\n      detailFocused: false,\n      errorInfo: {\n        tel: false,\n        name: false,\n        postalCode: false,\n        addressDetail: false\n      }\n    };\n  },\n\n  computed: {\n    // hide bottom field when use search && detail get focused\n    hideBottomFields() {\n      return this.searchResult.length && this.detailFocused;\n    },\n\n    areaListLoaded() {\n      return isObj(this.areaList) && Object.keys(this.areaList).length;\n    },\n\n    areaText() {\n      const { country, province, city, county, areaCode } = this.data;\n      if (areaCode) {\n        const arr = [country, province, city, county];\n        if (province && province === city) {\n          arr.splice(1, 1);\n        }\n        return arr.filter(text => text).join('/');\n      }\n      return '';\n    }\n  },\n\n  watch: {\n    addressInfo: {\n      handler(val) {\n        this.data = {\n          ...defaultData,\n          ...val\n        };\n\n        this.setAreaCode(val.areaCode);\n      },\n      deep: true,\n      immediate: true\n    },\n\n    areaList() {\n      this.setAreaCode(this.data.areaCode);\n    }\n  },\n\n  methods: {\n    onFocus(key) {\n      this.errorInfo[key] = false;\n      this.detailFocused = key === 'addressDetail';\n      this.$emit('focus', key);\n    },\n\n    onChangeDetail(val) {\n      this.data.addressDetail = val;\n      this.$emit('change-detail', val);\n    },\n\n    onAreaConfirm(values) {\n      this.showAreaPopup = false;\n      this.assignAreaValues();\n      this.$emit('change-area', values);\n    },\n\n    assignAreaValues(values) {\n      const { area } = this.$refs;\n      if (area) {\n        const detail = area.getArea();\n        detail.areaCode = detail.code;\n        delete detail.code;\n        Object.assign(this.data, detail);\n      }\n    },\n\n    onSave() {\n      const items = ['name', 'tel', 'areaCode', 'addressDetail'];\n\n      if (this.showPostal) {\n        items.push('postalCode');\n      }\n\n      const isValid = items.every(item => {\n        const msg = this.getErrorMessage(item);\n        if (msg) {\n          this.errorInfo[item] = true;\n          Toast(msg);\n        }\n        return !msg;\n      });\n\n      if (isValid && !this.isSaving) {\n        this.$emit('save', this.data);\n      }\n    },\n\n    getErrorMessage(key) {\n      const value = String(this.data[key] || '').trim();\n      const { $t } = this;\n\n      if (this.validator) {\n        const message = this.validator(key, value);\n        if (message) {\n          return message;\n        }\n      }\n\n      switch (key) {\n        case 'name':\n          return value ? '' : $t('nameEmpty');\n        case 'tel':\n          return this.telValidator(value) ? '' : $t('telInvalid');\n        case 'areaCode':\n          return value ? '' : $t('areaEmpty');\n        case 'addressDetail':\n          return value ? '' : $t('addressEmpty');\n        case 'postalCode':\n          return value && !/^\\d{6}$/.test(value) ? $t('postalEmpty') : '';\n      }\n    },\n\n    onDelete() {\n      Dialog.confirm({\n        title: this.$t('confirmDelete')\n      })\n        .then(() => {\n          this.$emit('delete', this.data);\n        })\n        .catch(() => {\n          this.$emit('cancel-delete', this.data);\n        });\n    },\n\n    // get values of area component\n    getArea() {\n      return this.$refs.area ? this.$refs.area.getValues() : [];\n    },\n\n    // set area code to area component\n    setAreaCode(code) {\n      this.data.areaCode = code || '';\n      code && this.$nextTick(this.assignAreaValues);\n    },\n\n    setAddressDetail(value) {\n      this.data.addressDetail = value;\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/address-edit"}]}