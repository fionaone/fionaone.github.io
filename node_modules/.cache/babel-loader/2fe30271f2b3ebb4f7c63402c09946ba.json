{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tabs/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/tabs/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport { raf } from '../utils/raf';\nimport { on, off } from '../utils/event';\nimport scrollUtils from '../utils/scroll';\nimport Touch from '../mixins/touch';\nexport default create({\n  name: 'tabs',\n  mixins: [Touch],\n  model: {\n    prop: 'active'\n  },\n  props: {\n    color: String,\n    sticky: Boolean,\n    lineWidth: Number,\n    swipeable: Boolean,\n    active: {\n      type: [Number, String],\n      default: 0\n    },\n    type: {\n      type: String,\n      default: 'line'\n    },\n    duration: {\n      type: Number,\n      default: 0.2\n    },\n    swipeThreshold: {\n      type: Number,\n      default: 4\n    },\n    offsetTop: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      tabs: [],\n      position: '',\n      curActive: null,\n      lineStyle: {},\n      events: {\n        resize: false,\n        sticky: false,\n        swipeable: false\n      }\n    };\n  },\n  computed: {\n    // whether the nav is scrollable\n    scrollable: function scrollable() {\n      return this.tabs.length > this.swipeThreshold;\n    },\n    wrapStyle: function wrapStyle() {\n      switch (this.position) {\n        case 'top':\n          return {\n            top: this.offsetTop + 'px',\n            position: 'fixed'\n          };\n\n        case 'bottom':\n          return {\n            top: 'auto',\n            bottom: 0\n          };\n\n        default:\n          return null;\n      }\n    },\n    navStyle: function navStyle() {\n      return {\n        borderColor: this.color\n      };\n    }\n  },\n  watch: {\n    active: function active(val) {\n      if (val !== this.curActive) {\n        this.correctActive(val);\n      }\n    },\n    color: function color() {\n      this.setLine();\n    },\n    tabs: function tabs(_tabs) {\n      this.correctActive(this.curActive || this.active);\n      this.scrollIntoView();\n      this.setLine();\n    },\n    curActive: function curActive() {\n      this.scrollIntoView();\n      this.setLine(); // scroll to correct position\n\n      if (this.position === 'page-top' || this.position === 'content-bottom') {\n        scrollUtils.setScrollTop(window, scrollUtils.getElementTop(this.$el));\n      }\n    },\n    sticky: function sticky() {\n      this.handlers(true);\n    },\n    swipeable: function swipeable() {\n      this.handlers(true);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.correctActive(this.active);\n    this.setLine();\n    this.$nextTick(function () {\n      _this.handlers(true);\n\n      _this.scrollIntoView(true);\n    });\n  },\n  activated: function activated() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.handlers(true);\n\n      _this2.scrollIntoView(true);\n    });\n  },\n  deactivated: function deactivated() {\n    this.handlers(false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.handlers(false);\n  },\n  methods: {\n    // whether to bind sticky listener\n    handlers: function handlers(bind) {\n      var events = this.events;\n      var sticky = this.sticky && bind;\n      var swipeable = this.swipeable && bind; // listen to window resize event\n\n      if (events.resize !== bind) {\n        events.resize = bind;\n        (bind ? on : off)(window, 'resize', this.setLine, true);\n      } // listen to scroll event\n\n\n      if (events.sticky !== sticky) {\n        events.sticky = sticky;\n        this.scrollEl = this.scrollEl || scrollUtils.getScrollEventTarget(this.$el);\n        (sticky ? on : off)(this.scrollEl, 'scroll', this.onScroll, true);\n        this.onScroll();\n      } // listen to touch event\n\n\n      if (events.swipeable !== swipeable) {\n        events.swipeable = swipeable;\n        var content = this.$refs.content;\n        var action = swipeable ? on : off;\n        action(content, 'touchstart', this.touchStart);\n        action(content, 'touchmove', this.touchMove);\n        action(content, 'touchend', this.onTouchEnd);\n        action(content, 'touchcancel', this.onTouchEnd);\n      }\n    },\n    // watch swipe touch end\n    onTouchEnd: function onTouchEnd() {\n      var direction = this.direction,\n          deltaX = this.deltaX,\n          curActive = this.curActive;\n      var minSwipeDistance = 50;\n      /* istanbul ignore else */\n\n      if (direction === 'horizontal' && this.offsetX >= minSwipeDistance) {\n        /* istanbul ignore else */\n        if (deltaX > 0 && curActive !== 0) {\n          this.setCurActive(curActive - 1);\n        } else if (deltaX < 0 && curActive !== this.tabs.length - 1) {\n          this.setCurActive(curActive + 1);\n        }\n      }\n    },\n    // adjust tab position\n    onScroll: function onScroll() {\n      var scrollTop = scrollUtils.getScrollTop(window) + this.offsetTop;\n      var elTopToPageTop = scrollUtils.getElementTop(this.$el);\n      var elBottomToPageTop = elTopToPageTop + this.$el.offsetHeight - this.$refs.wrap.offsetHeight;\n\n      if (scrollTop > elBottomToPageTop) {\n        this.position = 'bottom';\n      } else if (scrollTop > elTopToPageTop) {\n        this.position = 'top';\n      } else {\n        this.position = '';\n      }\n\n      var scrollParams = {\n        scrollTop: scrollTop,\n        isFixed: this.position === 'top'\n      };\n      this.$emit('scroll', scrollParams);\n    },\n    // update nav bar style\n    setLine: function setLine() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        if (!_this3.$refs.tabs || _this3.type !== 'line') {\n          return;\n        }\n\n        var tab = _this3.$refs.tabs[_this3.curActive];\n        var width = _this3.lineWidth || tab.offsetWidth / 2;\n        var left = tab.offsetLeft + (tab.offsetWidth - width) / 2;\n        _this3.lineStyle = {\n          width: \"\".concat(width, \"px\"),\n          backgroundColor: _this3.color,\n          transform: \"translateX(\".concat(left, \"px)\"),\n          transitionDuration: \"\".concat(_this3.duration, \"s\")\n        };\n      });\n    },\n    // correct the value of active\n    correctActive: function correctActive(active) {\n      active = +active;\n      var exist = this.tabs.some(function (tab) {\n        return tab.index === active;\n      });\n      var defaultActive = (this.tabs[0] || {}).index || 0;\n      this.setCurActive(exist ? active : defaultActive);\n    },\n    setCurActive: function setCurActive(active) {\n      active = this.findAvailableTab(active, active < this.curActive);\n\n      if (this.isDef(active) && active !== this.curActive) {\n        this.$emit('input', active);\n\n        if (this.curActive !== null) {\n          this.$emit('change', active, this.tabs[active].title);\n        }\n\n        this.curActive = active;\n      }\n    },\n    findAvailableTab: function findAvailableTab(active, reverse) {\n      var diff = reverse ? -1 : 1;\n      var index = active;\n\n      while (index >= 0 && index < this.tabs.length) {\n        if (!this.tabs[index].disabled) {\n          return index;\n        }\n\n        index += diff;\n      }\n\n      return active;\n    },\n    // emit event when clicked\n    onClick: function onClick(index) {\n      var _this$tabs$index = this.tabs[index],\n          title = _this$tabs$index.title,\n          disabled = _this$tabs$index.disabled;\n\n      if (disabled) {\n        this.$emit('disabled', index, title);\n      } else {\n        this.setCurActive(index);\n        this.$emit('click', index, title);\n      }\n    },\n    // scroll active tab into view\n    scrollIntoView: function scrollIntoView(immediate) {\n      if (!this.scrollable || !this.$refs.tabs) {\n        return;\n      }\n\n      var tab = this.$refs.tabs[this.curActive];\n      var nav = this.$refs.nav;\n      var scrollLeft = nav.scrollLeft,\n          navWidth = nav.offsetWidth;\n      var offsetLeft = tab.offsetLeft,\n          tabWidth = tab.offsetWidth;\n      this.scrollTo(nav, scrollLeft, offsetLeft - (navWidth - tabWidth) / 2, immediate);\n    },\n    // animate the scrollLeft of nav\n    scrollTo: function scrollTo(el, from, to, immediate) {\n      if (immediate) {\n        el.scrollLeft += to - from;\n        return;\n      }\n\n      var count = 0;\n      var frames = Math.round(this.duration * 1000 / 16);\n\n      var animate = function animate() {\n        el.scrollLeft += (to - from) / frames;\n        /* istanbul ignore next */\n\n        if (++count < frames) {\n          raf(animate);\n        }\n      };\n\n      animate();\n    },\n    // render title slot of child tab\n    renderTitle: function renderTitle(el, index) {\n      var _this4 = this;\n\n      this.$nextTick(function () {\n        var title = _this4.$refs.title[index];\n        title.parentNode.replaceChild(el, title);\n      });\n    },\n    getTabStyle: function getTabStyle(item, index) {\n      var style = {};\n      var color = this.color;\n      var active = index === this.curActive;\n      var isCard = this.type === 'card';\n\n      if (color) {\n        if (!item.disabled && isCard !== active) {\n          style.color = color;\n        }\n\n        if (!item.disabled && isCard && active) {\n          style.backgroundColor = color;\n        }\n\n        if (isCard) {\n          style.borderColor = color;\n        }\n      }\n\n      return style;\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,MAAA,MAAA,iBAAA;AACA,SAAA,GAAA,QAAA,cAAA;AACA,SAAA,EAAA,EAAA,GAAA,QAAA,gBAAA;AACA,OAAA,WAAA,MAAA,iBAAA;AACA,OAAA,KAAA,MAAA,iBAAA;AAEA,eAAA,MAAA,CAAA;AACA,EAAA,IAAA,EAAA,MADA;AAGA,EAAA,MAAA,EAAA,CAAA,KAAA,CAHA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GALA;AASA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA,OAFA;AAGA,IAAA,SAAA,EAAA,MAHA;AAIA,IAAA,SAAA,EAAA,OAJA;AAKA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,CAAA,MAAA,EAAA,MAAA,CADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KATA;AAaA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAbA;AAiBA,IAAA,cAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAjBA;AAqBA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AArBA,GATA;AAoCA,EAAA,IApCA,kBAoCA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,SAAA,EAAA,IAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,MAAA,EAAA;AACA,QAAA,MAAA,EAAA,KADA;AAEA,QAAA,MAAA,EAAA,KAFA;AAGA,QAAA,SAAA,EAAA;AAHA;AALA,KAAA;AAWA,GAhDA;AAkDA,EAAA,QAAA,EAAA;AACA;AACA,IAAA,UAFA,wBAEA;AACA,aAAA,KAAA,IAAA,CAAA,MAAA,GAAA,KAAA,cAAA;AACA,KAJA;AAMA,IAAA,SANA,uBAMA;AACA,cAAA,KAAA,QAAA;AACA,aAAA,KAAA;AACA,iBAAA;AACA,YAAA,GAAA,EAAA,KAAA,SAAA,GAAA,IADA;AAEA,YAAA,QAAA,EAAA;AAFA,WAAA;;AAIA,aAAA,QAAA;AACA,iBAAA;AACA,YAAA,GAAA,EAAA,MADA;AAEA,YAAA,MAAA,EAAA;AAFA,WAAA;;AAIA;AACA,iBAAA,IAAA;AAZA;AAcA,KArBA;AAuBA,IAAA,QAvBA,sBAuBA;AACA,aAAA;AACA,QAAA,WAAA,EAAA,KAAA;AADA,OAAA;AAGA;AA3BA,GAlDA;AAgFA,EAAA,KAAA,EAAA;AACA,IAAA,MADA,kBACA,GADA,EACA;AACA,UAAA,GAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,aAAA,CAAA,GAAA;AACA;AACA,KALA;AAOA,IAAA,KAPA,mBAOA;AACA,WAAA,OAAA;AACA,KATA;AAWA,IAAA,IAXA,gBAWA,KAXA,EAWA;AACA,WAAA,aAAA,CAAA,KAAA,SAAA,IAAA,KAAA,MAAA;AACA,WAAA,cAAA;AACA,WAAA,OAAA;AACA,KAfA;AAiBA,IAAA,SAjBA,uBAiBA;AACA,WAAA,cAAA;AACA,WAAA,OAAA,GAFA,CAIA;;AACA,UAAA,KAAA,QAAA,KAAA,UAAA,IAAA,KAAA,QAAA,KAAA,gBAAA,EAAA;AACA,QAAA,WAAA,CAAA,YAAA,CAAA,MAAA,EAAA,WAAA,CAAA,aAAA,CAAA,KAAA,GAAA,CAAA;AACA;AACA,KAzBA;AA2BA,IAAA,MA3BA,oBA2BA;AACA,WAAA,QAAA,CAAA,IAAA;AACA,KA7BA;AA+BA,IAAA,SA/BA,uBA+BA;AACA,WAAA,QAAA,CAAA,IAAA;AACA;AAjCA,GAhFA;AAoHA,EAAA,OApHA,qBAoHA;AAAA;;AACA,SAAA,aAAA,CAAA,KAAA,MAAA;AACA,SAAA,OAAA;AAEA,SAAA,SAAA,CAAA,YAAA;AACA,MAAA,KAAA,CAAA,QAAA,CAAA,IAAA;;AACA,MAAA,KAAA,CAAA,cAAA,CAAA,IAAA;AACA,KAHA;AAIA,GA5HA;AA8HA,EAAA,SA9HA,uBA8HA;AAAA;;AACA,SAAA,SAAA,CAAA,YAAA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,IAAA;;AACA,MAAA,MAAA,CAAA,cAAA,CAAA,IAAA;AACA,KAHA;AAIA,GAnIA;AAqIA,EAAA,WArIA,yBAqIA;AACA,SAAA,QAAA,CAAA,KAAA;AACA,GAvIA;AAyIA,EAAA,aAzIA,2BAyIA;AACA,SAAA,QAAA,CAAA,KAAA;AACA,GA3IA;AA6IA,EAAA,OAAA,EAAA;AACA;AACA,IAAA,QAFA,oBAEA,IAFA,EAEA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAEA,UAAA,MAAA,GAAA,KAAA,MAAA,IAAA,IAAA;AACA,UAAA,SAAA,GAAA,KAAA,SAAA,IAAA,IAAA,CAHA,CAKA;;AACA,UAAA,MAAA,CAAA,MAAA,KAAA,IAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,IAAA;AACA,SAAA,IAAA,GAAA,EAAA,GAAA,GAAA,EAAA,MAAA,EAAA,QAAA,EAAA,KAAA,OAAA,EAAA,IAAA;AACA,OATA,CAWA;;;AACA,UAAA,MAAA,CAAA,MAAA,KAAA,MAAA,EAAA;AACA,QAAA,MAAA,CAAA,MAAA,GAAA,MAAA;AACA,aAAA,QAAA,GAAA,KAAA,QAAA,IAAA,WAAA,CAAA,oBAAA,CAAA,KAAA,GAAA,CAAA;AACA,SAAA,MAAA,GAAA,EAAA,GAAA,GAAA,EAAA,KAAA,QAAA,EAAA,QAAA,EAAA,KAAA,QAAA,EAAA,IAAA;AACA,aAAA,QAAA;AACA,OAjBA,CAmBA;;;AACA,UAAA,MAAA,CAAA,SAAA,KAAA,SAAA,EAAA;AACA,QAAA,MAAA,CAAA,SAAA,GAAA,SAAA;AADA,YAEA,OAFA,GAEA,KAAA,KAFA,CAEA,OAFA;AAGA,YAAA,MAAA,GAAA,SAAA,GAAA,EAAA,GAAA,GAAA;AAEA,QAAA,MAAA,CAAA,OAAA,EAAA,YAAA,EAAA,KAAA,UAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,EAAA,WAAA,EAAA,KAAA,SAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,EAAA,UAAA,EAAA,KAAA,UAAA,CAAA;AACA,QAAA,MAAA,CAAA,OAAA,EAAA,aAAA,EAAA,KAAA,UAAA,CAAA;AACA;AACA,KAhCA;AAkCA;AACA,IAAA,UAnCA,wBAmCA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAAA,UACA,MADA,GACA,IADA,CACA,MADA;AAAA,UACA,SADA,GACA,IADA,CACA,SADA;AAEA,UAAA,gBAAA,GAAA,EAAA;AAEA;;AACA,UAAA,SAAA,KAAA,YAAA,IAAA,KAAA,OAAA,IAAA,gBAAA,EAAA;AACA;AACA,YAAA,MAAA,GAAA,CAAA,IAAA,SAAA,KAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,SAAA,GAAA,CAAA;AACA,SAFA,MAEA,IAAA,MAAA,GAAA,CAAA,IAAA,SAAA,KAAA,KAAA,IAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,YAAA,CAAA,SAAA,GAAA,CAAA;AACA;AACA;AACA,KAhDA;AAkDA;AACA,IAAA,QAnDA,sBAmDA;AACA,UAAA,SAAA,GAAA,WAAA,CAAA,YAAA,CAAA,MAAA,IAAA,KAAA,SAAA;AACA,UAAA,cAAA,GAAA,WAAA,CAAA,aAAA,CAAA,KAAA,GAAA,CAAA;AACA,UAAA,iBAAA,GAAA,cAAA,GAAA,KAAA,GAAA,CAAA,YAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,YAAA;;AACA,UAAA,SAAA,GAAA,iBAAA,EAAA;AACA,aAAA,QAAA,GAAA,QAAA;AACA,OAFA,MAEA,IAAA,SAAA,GAAA,cAAA,EAAA;AACA,aAAA,QAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,QAAA,GAAA,EAAA;AACA;;AACA,UAAA,YAAA,GAAA;AACA,QAAA,SAAA,EAAA,SADA;AAEA,QAAA,OAAA,EAAA,KAAA,QAAA,KAAA;AAFA,OAAA;AAIA,WAAA,KAAA,CAAA,QAAA,EAAA,YAAA;AACA,KAnEA;AAqEA;AACA,IAAA,OAtEA,qBAsEA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,YAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,IAAA,MAAA,CAAA,IAAA,KAAA,MAAA,EAAA;AACA;AACA;;AAEA,YAAA,GAAA,GAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,CAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,SAAA,IAAA,GAAA,CAAA,WAAA,GAAA,CAAA;AACA,YAAA,IAAA,GAAA,GAAA,CAAA,UAAA,GAAA,CAAA,GAAA,CAAA,WAAA,GAAA,KAAA,IAAA,CAAA;AAEA,QAAA,MAAA,CAAA,SAAA,GAAA;AACA,UAAA,KAAA,YAAA,KAAA,OADA;AAEA,UAAA,eAAA,EAAA,MAAA,CAAA,KAFA;AAGA,UAAA,SAAA,uBAAA,IAAA,QAHA;AAIA,UAAA,kBAAA,YAAA,MAAA,CAAA,QAAA;AAJA,SAAA;AAMA,OAfA;AAgBA,KAvFA;AAyFA;AACA,IAAA,aA1FA,yBA0FA,MA1FA,EA0FA;AACA,MAAA,MAAA,GAAA,CAAA,MAAA;AACA,UAAA,KAAA,GAAA,KAAA,IAAA,CAAA,IAAA,CAAA,UAAA,GAAA;AAAA,eAAA,GAAA,CAAA,KAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,UAAA,aAAA,GAAA,CAAA,KAAA,IAAA,CAAA,CAAA,KAAA,EAAA,EAAA,KAAA,IAAA,CAAA;AACA,WAAA,YAAA,CAAA,KAAA,GAAA,MAAA,GAAA,aAAA;AACA,KA/FA;AAiGA,IAAA,YAjGA,wBAiGA,MAjGA,EAiGA;AACA,MAAA,MAAA,GAAA,KAAA,gBAAA,CAAA,MAAA,EAAA,MAAA,GAAA,KAAA,SAAA,CAAA;;AACA,UAAA,KAAA,KAAA,CAAA,MAAA,KAAA,MAAA,KAAA,KAAA,SAAA,EAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,MAAA;;AAEA,YAAA,KAAA,SAAA,KAAA,IAAA,EAAA;AACA,eAAA,KAAA,CAAA,QAAA,EAAA,MAAA,EAAA,KAAA,IAAA,CAAA,MAAA,EAAA,KAAA;AACA;;AACA,aAAA,SAAA,GAAA,MAAA;AACA;AACA,KA3GA;AA6GA,IAAA,gBA7GA,4BA6GA,MA7GA,EA6GA,OA7GA,EA6GA;AACA,UAAA,IAAA,GAAA,OAAA,GAAA,CAAA,CAAA,GAAA,CAAA;AACA,UAAA,KAAA,GAAA,MAAA;;AAEA,aAAA,KAAA,IAAA,CAAA,IAAA,KAAA,GAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA,YAAA,CAAA,KAAA,IAAA,CAAA,KAAA,EAAA,QAAA,EAAA;AACA,iBAAA,KAAA;AACA;;AACA,QAAA,KAAA,IAAA,IAAA;AACA;;AAEA,aAAA,MAAA;AACA,KAzHA;AA2HA;AACA,IAAA,OA5HA,mBA4HA,KA5HA,EA4HA;AAAA,6BACA,KAAA,IAAA,CAAA,KAAA,CADA;AAAA,UACA,KADA,oBACA,KADA;AAAA,UACA,QADA,oBACA,QADA;;AAEA,UAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA,UAAA,EAAA,KAAA,EAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,CAAA,KAAA;AACA,aAAA,KAAA,CAAA,OAAA,EAAA,KAAA,EAAA,KAAA;AACA;AACA,KApIA;AAsIA;AACA,IAAA,cAvIA,0BAuIA,SAvIA,EAuIA;AACA,UAAA,CAAA,KAAA,UAAA,IAAA,CAAA,KAAA,KAAA,CAAA,IAAA,EAAA;AACA;AACA;;AAEA,UAAA,GAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,SAAA,CAAA;AALA,UAMA,GANA,GAMA,KAAA,KANA,CAMA,GANA;AAAA,UAOA,UAPA,GAOA,GAPA,CAOA,UAPA;AAAA,UAOA,QAPA,GAOA,GAPA,CAOA,WAPA;AAAA,UAQA,UARA,GAQA,GARA,CAQA,UARA;AAAA,UAQA,QARA,GAQA,GARA,CAQA,WARA;AAUA,WAAA,QAAA,CAAA,GAAA,EAAA,UAAA,EAAA,UAAA,GAAA,CAAA,QAAA,GAAA,QAAA,IAAA,CAAA,EAAA,SAAA;AACA,KAlJA;AAoJA;AACA,IAAA,QArJA,oBAqJA,EArJA,EAqJA,IArJA,EAqJA,EArJA,EAqJA,SArJA,EAqJA;AACA,UAAA,SAAA,EAAA;AACA,QAAA,EAAA,CAAA,UAAA,IAAA,EAAA,GAAA,IAAA;AACA;AACA;;AAEA,UAAA,KAAA,GAAA,CAAA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,KAAA,QAAA,GAAA,IAAA,GAAA,EAAA,CAAA;;AACA,UAAA,OAAA,GAAA,SAAA,OAAA,GAAA;AACA,QAAA,EAAA,CAAA,UAAA,IAAA,CAAA,EAAA,GAAA,IAAA,IAAA,MAAA;AACA;;AACA,YAAA,EAAA,KAAA,GAAA,MAAA,EAAA;AACA,UAAA,GAAA,CAAA,OAAA,CAAA;AACA;AACA,OANA;;AAOA,MAAA,OAAA;AACA,KArKA;AAuKA;AACA,IAAA,WAxKA,uBAwKA,EAxKA,EAwKA,KAxKA,EAwKA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,YAAA,KAAA,GAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,KAAA,CAAA;AACA,QAAA,KAAA,CAAA,UAAA,CAAA,YAAA,CAAA,EAAA,EAAA,KAAA;AACA,OAHA;AAIA,KA7KA;AA+KA,IAAA,WA/KA,uBA+KA,IA/KA,EA+KA,KA/KA,EA+KA;AACA,UAAA,KAAA,GAAA,EAAA;AADA,UAEA,KAFA,GAEA,IAFA,CAEA,KAFA;AAGA,UAAA,MAAA,GAAA,KAAA,KAAA,KAAA,SAAA;AACA,UAAA,MAAA,GAAA,KAAA,IAAA,KAAA,MAAA;;AAEA,UAAA,KAAA,EAAA;AACA,YAAA,CAAA,IAAA,CAAA,QAAA,IAAA,MAAA,KAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA;;AACA,YAAA,CAAA,IAAA,CAAA,QAAA,IAAA,MAAA,IAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,eAAA,GAAA,KAAA;AACA;;AACA,YAAA,MAAA,EAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA;AACA;;AAEA,aAAA,KAAA;AACA;AAlMA;AA7IA,CAAA,CAAA","sourcesContent":["<template>\n  <div :class=\"b([type])\">\n    <div\n      ref=\"wrap\"\n      :style=\"wrapStyle\"\n      :class=\"[\n        b('wrap', { scrollable }),\n        { 'x-hairline--top-bottom': type === 'line' }\n      ]\"\n    >\n      <div :class=\"b('nav', [type])\" ref=\"nav\" :style=\"navStyle\">\n        <div v-if=\"type === 'line'\" :class=\"b('line')\" :style=\"lineStyle\" />\n        <div\n          v-for=\"(tab, index) in tabs\"\n          ref=\"tabs\"\n          class=\"x-tab\"\n          :class=\"{\n            'x-tab--active': index === curActive,\n            'x-tab--disabled': tab.disabled\n          }\"\n          :style=\"getTabStyle(tab, index)\"\n          @click=\"onClick(index)\"\n        >\n          <span class=\"x-ellipsis\" ref=\"title\">{{ tab.title }}</span>\n        </div>\n      </div>\n    </div>\n    <div :class=\"b('content')\" ref=\"content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport { raf } from '../utils/raf';\nimport { on, off } from '../utils/event';\nimport scrollUtils from '../utils/scroll';\nimport Touch from '../mixins/touch';\n\nexport default create({\n  name: 'tabs',\n\n  mixins: [Touch],\n\n  model: {\n    prop: 'active'\n  },\n\n  props: {\n    color: String,\n    sticky: Boolean,\n    lineWidth: Number,\n    swipeable: Boolean,\n    active: {\n      type: [Number, String],\n      default: 0\n    },\n    type: {\n      type: String,\n      default: 'line'\n    },\n    duration: {\n      type: Number,\n      default: 0.2\n    },\n    swipeThreshold: {\n      type: Number,\n      default: 4\n    },\n    offsetTop: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  data() {\n    return {\n      tabs: [],\n      position: '',\n      curActive: null,\n      lineStyle: {},\n      events: {\n        resize: false,\n        sticky: false,\n        swipeable: false\n      }\n    };\n  },\n\n  computed: {\n    // whether the nav is scrollable\n    scrollable() {\n      return this.tabs.length > this.swipeThreshold;\n    },\n\n    wrapStyle() {\n      switch (this.position) {\n        case 'top':\n          return {\n            top: this.offsetTop + 'px',\n            position: 'fixed'\n          };\n        case 'bottom':\n          return {\n            top: 'auto',\n            bottom: 0\n          };\n        default:\n          return null;\n      }\n    },\n\n    navStyle() {\n      return {\n        borderColor: this.color\n      };\n    }\n  },\n\n  watch: {\n    active(val) {\n      if (val !== this.curActive) {\n        this.correctActive(val);\n      }\n    },\n\n    color() {\n      this.setLine();\n    },\n\n    tabs(tabs) {\n      this.correctActive(this.curActive || this.active);\n      this.scrollIntoView();\n      this.setLine();\n    },\n\n    curActive() {\n      this.scrollIntoView();\n      this.setLine();\n\n      // scroll to correct position\n      if (this.position === 'page-top' || this.position === 'content-bottom') {\n        scrollUtils.setScrollTop(window, scrollUtils.getElementTop(this.$el));\n      }\n    },\n\n    sticky() {\n      this.handlers(true);\n    },\n\n    swipeable() {\n      this.handlers(true);\n    }\n  },\n\n  mounted() {\n    this.correctActive(this.active);\n    this.setLine();\n\n    this.$nextTick(() => {\n      this.handlers(true);\n      this.scrollIntoView(true);\n    });\n  },\n\n  activated() {\n    this.$nextTick(() => {\n      this.handlers(true);\n      this.scrollIntoView(true);\n    });\n  },\n\n  deactivated() {\n    this.handlers(false);\n  },\n\n  beforeDestroy() {\n    this.handlers(false);\n  },\n\n  methods: {\n    // whether to bind sticky listener\n    handlers(bind) {\n      const { events } = this;\n      const sticky = this.sticky && bind;\n      const swipeable = this.swipeable && bind;\n\n      // listen to window resize event\n      if (events.resize !== bind) {\n        events.resize = bind;\n        (bind ? on : off)(window, 'resize', this.setLine, true);\n      }\n\n      // listen to scroll event\n      if (events.sticky !== sticky) {\n        events.sticky = sticky;\n        this.scrollEl = this.scrollEl || scrollUtils.getScrollEventTarget(this.$el);\n        (sticky ? on : off)(this.scrollEl, 'scroll', this.onScroll, true);\n        this.onScroll();\n      }\n\n      // listen to touch event\n      if (events.swipeable !== swipeable) {\n        events.swipeable = swipeable;\n        const { content } = this.$refs;\n        const action = swipeable ? on : off;\n\n        action(content, 'touchstart', this.touchStart);\n        action(content, 'touchmove', this.touchMove);\n        action(content, 'touchend', this.onTouchEnd);\n        action(content, 'touchcancel', this.onTouchEnd);\n      }\n    },\n\n    // watch swipe touch end\n    onTouchEnd() {\n      const { direction, deltaX, curActive } = this;\n      const minSwipeDistance = 50;\n\n      /* istanbul ignore else */\n      if (direction === 'horizontal' && this.offsetX >= minSwipeDistance) {\n        /* istanbul ignore else */\n        if (deltaX > 0 && curActive !== 0) {\n          this.setCurActive(curActive - 1);\n        } else if (deltaX < 0 && curActive !== this.tabs.length - 1) {\n          this.setCurActive(curActive + 1);\n        }\n      }\n    },\n\n    // adjust tab position\n    onScroll() {\n      const scrollTop = scrollUtils.getScrollTop(window) + this.offsetTop;\n      const elTopToPageTop = scrollUtils.getElementTop(this.$el);\n      const elBottomToPageTop = elTopToPageTop + this.$el.offsetHeight - this.$refs.wrap.offsetHeight;\n      if (scrollTop > elBottomToPageTop) {\n        this.position = 'bottom';\n      } else if (scrollTop > elTopToPageTop) {\n        this.position = 'top';\n      } else {\n        this.position = '';\n      }\n      const scrollParams = {\n        scrollTop,\n        isFixed: this.position === 'top'\n      };\n      this.$emit('scroll', scrollParams);\n    },\n\n    // update nav bar style\n    setLine() {\n      this.$nextTick(() => {\n        if (!this.$refs.tabs || this.type !== 'line') {\n          return;\n        }\n\n        const tab = this.$refs.tabs[this.curActive];\n        const width = this.lineWidth || (tab.offsetWidth / 2);\n        const left = tab.offsetLeft + (tab.offsetWidth - width) / 2;\n\n        this.lineStyle = {\n          width: `${width}px`,\n          backgroundColor: this.color,\n          transform: `translateX(${left}px)`,\n          transitionDuration: `${this.duration}s`\n        };\n      });\n    },\n\n    // correct the value of active\n    correctActive(active) {\n      active = +active;\n      const exist = this.tabs.some(tab => tab.index === active);\n      const defaultActive = (this.tabs[0] || {}).index || 0;\n      this.setCurActive(exist ? active : defaultActive);\n    },\n\n    setCurActive(active) {\n      active = this.findAvailableTab(active, active < this.curActive);\n      if (this.isDef(active) && active !== this.curActive) {\n        this.$emit('input', active);\n\n        if (this.curActive !== null) {\n          this.$emit('change', active, this.tabs[active].title);\n        }\n        this.curActive = active;\n      }\n    },\n\n    findAvailableTab(active, reverse) {\n      const diff = reverse ? -1 : 1;\n      let index = active;\n\n      while (index >= 0 && index < this.tabs.length) {\n        if (!this.tabs[index].disabled) {\n          return index;\n        }\n        index += diff;\n      }\n\n      return active;\n    },\n\n    // emit event when clicked\n    onClick(index) {\n      const { title, disabled } = this.tabs[index];\n      if (disabled) {\n        this.$emit('disabled', index, title);\n      } else {\n        this.setCurActive(index);\n        this.$emit('click', index, title);\n      }\n    },\n\n    // scroll active tab into view\n    scrollIntoView(immediate) {\n      if (!this.scrollable || !this.$refs.tabs) {\n        return;\n      }\n\n      const tab = this.$refs.tabs[this.curActive];\n      const { nav } = this.$refs;\n      const { scrollLeft, offsetWidth: navWidth } = nav;\n      const { offsetLeft, offsetWidth: tabWidth } = tab;\n\n      this.scrollTo(nav, scrollLeft, offsetLeft - (navWidth - tabWidth) / 2, immediate);\n    },\n\n    // animate the scrollLeft of nav\n    scrollTo(el, from, to, immediate) {\n      if (immediate) {\n        el.scrollLeft += to - from;\n        return;\n      }\n\n      let count = 0;\n      const frames = Math.round(this.duration * 1000 / 16);\n      const animate = () => {\n        el.scrollLeft += (to - from) / frames;\n        /* istanbul ignore next */\n        if (++count < frames) {\n          raf(animate);\n        }\n      };\n      animate();\n    },\n\n    // render title slot of child tab\n    renderTitle(el, index) {\n      this.$nextTick(() => {\n        const title = this.$refs.title[index];\n        title.parentNode.replaceChild(el, title);\n      });\n    },\n\n    getTabStyle(item, index) {\n      const style = {};\n      const { color } = this;\n      const active = index === this.curActive;\n      const isCard = this.type === 'card';\n\n      if (color) {\n        if (!item.disabled && isCard !== active) {\n          style.color = color;\n        }\n        if (!item.disabled && isCard && active) {\n          style.backgroundColor = color;\n        }\n        if (isCard) {\n          style.borderColor = color;\n        }\n      }\n\n      return style;\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/tabs"}]}