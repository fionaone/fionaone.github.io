{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/pull-refresh/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/pull-refresh/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport scrollUtils from '../utils/scroll';\nimport Touch from '../mixins/touch';\nexport default create({\n  name: 'pull-refresh',\n  mixins: [Touch],\n  props: {\n    disabled: Boolean,\n    pullingText: String,\n    loosingText: String,\n    loadingText: String,\n    value: {\n      type: Boolean,\n      required: true\n    },\n    animationDuration: {\n      type: Number,\n      default: 300\n    },\n    headHeight: {\n      type: Number,\n      default: 50\n    }\n  },\n  data: function data() {\n    return {\n      status: 'normal',\n      height: 0,\n      duration: 0\n    };\n  },\n  computed: {\n    style: function style() {\n      return {\n        transition: \"\".concat(this.duration, \"ms\"),\n        transform: \"translate3d(0,\".concat(this.height, \"px, 0)\")\n      };\n    },\n    untouchable: function untouchable() {\n      return this.status === 'loading' || this.disabled;\n    }\n  },\n  mounted: function mounted() {\n    this.scrollEl = scrollUtils.getScrollEventTarget(this.$el);\n  },\n  watch: {\n    value: function value(val) {\n      this.duration = this.animationDuration;\n      this.getStatus(val ? this.headHeight : 0, val);\n    }\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      if (this.untouchable) {\n        return;\n      }\n\n      if (this.getCeiling()) {\n        this.duration = 0;\n        this.touchStart(event);\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (this.untouchable) {\n        return;\n      }\n\n      this.touchMove(event);\n\n      if (!this.ceiling && this.getCeiling()) {\n        this.duration = 0;\n        this.startY = event.touches[0].clientY;\n        this.deltaY = 0;\n      }\n\n      if (this.ceiling && this.deltaY >= 0) {\n        if (this.direction === 'vertical') {\n          this.getStatus(this.ease(this.deltaY));\n          event.cancelable && event.preventDefault();\n        }\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (this.untouchable) {\n        return;\n      }\n\n      if (this.ceiling && this.deltaY) {\n        this.duration = this.animationDuration;\n\n        if (this.status === 'loosing') {\n          this.getStatus(this.headHeight, true);\n          this.$emit('input', true);\n          this.$emit('refresh');\n        } else {\n          this.getStatus(0);\n        }\n      }\n    },\n    getCeiling: function getCeiling() {\n      this.ceiling = scrollUtils.getScrollTop(this.scrollEl) === 0;\n      return this.ceiling;\n    },\n    ease: function ease(height) {\n      var headHeight = this.headHeight;\n      return height < headHeight ? height : height < headHeight * 2 ? Math.round(headHeight + (height - headHeight) / 2) : Math.round(headHeight * 1.5 + (height - headHeight * 2) / 4);\n    },\n    getStatus: function getStatus(height, isLoading) {\n      this.height = height;\n      var status = isLoading ? 'loading' : height === 0 ? 'normal' : height < this.headHeight ? 'pulling' : 'loosing';\n\n      if (status !== this.status) {\n        this.status = status;\n      }\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div\n      :class=\"b('track')\"\n      :style=\"style\"\n      @touchstart=\"onTouchStart\"\n      @touchmove=\"onTouchMove\"\n      @touchend=\"onTouchEnd\"\n      @touchcancel=\"onTouchEnd\"\n    >\n      <div :class=\"b('head')\">\n        <slot v-if=\"status === 'normal'\" name=\"normal\" />\n        <slot v-if=\"status === 'pulling'\" name=\"pulling\">\n          <span :class=\"b('text')\">{{ pullingText || $t('pulling') }}</span>\n        </slot>\n        <slot v-if=\"status === 'loosing'\" name=\"loosing\">\n          <span :class=\"b('text')\">{{ loosingText || $t('loosing') }}</span>\n        </slot>\n        <slot v-if=\"status === 'loading'\" name=\"loading\">\n          <div :class=\"b('loading')\">\n            <loading />\n            <span>{{ loadingText || $t('loadingTip') }}</span>\n          </div>\n        </slot>\n      </div>\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport scrollUtils from '../utils/scroll';\nimport Touch from '../mixins/touch';\n\nexport default create({\n  name: 'pull-refresh',\n\n  mixins: [Touch],\n\n  props: {\n    disabled: Boolean,\n    pullingText: String,\n    loosingText: String,\n    loadingText: String,\n    value: {\n      type: Boolean,\n      required: true\n    },\n    animationDuration: {\n      type: Number,\n      default: 300\n    },\n    headHeight: {\n      type: Number,\n      default: 50\n    }\n  },\n\n  data() {\n    return {\n      status: 'normal',\n      height: 0,\n      duration: 0\n    };\n  },\n\n  computed: {\n    style() {\n      return {\n        transition: `${this.duration}ms`,\n        transform: `translate3d(0,${this.height}px, 0)`\n      };\n    },\n\n    untouchable() {\n      return this.status === 'loading' || this.disabled;\n    }\n  },\n\n  mounted() {\n    this.scrollEl = scrollUtils.getScrollEventTarget(this.$el);\n  },\n\n  watch: {\n    value(val) {\n      this.duration = this.animationDuration;\n      this.getStatus(val ? this.headHeight : 0, val);\n    }\n  },\n\n  methods: {\n    onTouchStart(event) {\n      if (this.untouchable) {\n        return;\n      }\n      if (this.getCeiling()) {\n        this.duration = 0;\n        this.touchStart(event);\n      }\n    },\n\n    onTouchMove(event) {\n      if (this.untouchable) {\n        return;\n      }\n\n      this.touchMove(event);\n\n      if (!this.ceiling && this.getCeiling()) {\n        this.duration = 0;\n        this.startY = event.touches[0].clientY;\n        this.deltaY = 0;\n      }\n\n      if (this.ceiling && this.deltaY >= 0) {\n        if (this.direction === 'vertical') {\n          this.getStatus(this.ease(this.deltaY));\n          event.cancelable && event.preventDefault();\n        }\n      }\n    },\n\n    onTouchEnd() {\n      if (this.untouchable) {\n        return;\n      }\n\n      if (this.ceiling && this.deltaY) {\n        this.duration = this.animationDuration;\n        if (this.status === 'loosing') {\n          this.getStatus(this.headHeight, true);\n          this.$emit('input', true);\n          this.$emit('refresh');\n        } else {\n          this.getStatus(0);\n        }\n      }\n    },\n\n    getCeiling() {\n      this.ceiling = scrollUtils.getScrollTop(this.scrollEl) === 0;\n      return this.ceiling;\n    },\n\n    ease(height) {\n      const { headHeight } = this;\n      return height < headHeight\n        ? height\n        : height < headHeight * 2\n          ? Math.round(headHeight + (height - headHeight) / 2)\n          : Math.round(headHeight * 1.5 + (height - headHeight * 2) / 4);\n    },\n\n    getStatus(height, isLoading) {\n      this.height = height;\n\n      const status = isLoading\n        ? 'loading' : height === 0\n          ? 'normal' : height < this.headHeight\n            ? 'pulling' : 'loosing';\n\n      if (status !== this.status) {\n        this.status = status;\n      }\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/pull-refresh"}]}