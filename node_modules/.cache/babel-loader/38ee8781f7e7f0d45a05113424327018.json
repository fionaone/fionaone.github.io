{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/swipe/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/swipe/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/zsy/Projects/about_me/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nimport Touch from '../mixins/touch';\nimport { on, off } from '../utils/event';\nexport default create({\n  name: 'swipe',\n  mixins: [Touch],\n  props: {\n    width: Number,\n    height: Number,\n    autoplay: Number,\n    vertical: Boolean,\n    loop: {\n      type: Boolean,\n      default: true\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    initialSwipe: {\n      type: Number,\n      default: 0\n    },\n    showIndicators: {\n      type: Boolean,\n      default: true\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n  data: function data() {\n    return {\n      computedWidth: 0,\n      computedHeight: 0,\n      offset: 0,\n      active: 0,\n      deltaX: 0,\n      deltaY: 0,\n      swipes: [],\n      swiping: false\n    };\n  },\n  mounted: function mounted() {\n    this.initialize();\n\n    if (!this.$isServer) {\n      on(window, 'resize', this.onResize, true);\n    }\n  },\n  destroyed: function destroyed() {\n    this.clear();\n\n    if (!this.$isServer) {\n      off(window, 'resize', this.onResize, true);\n    }\n  },\n  watch: {\n    swipes: function swipes() {\n      this.initialize();\n    },\n    initialSwipe: function initialSwipe() {\n      this.initialize();\n    },\n    autoplay: function autoplay(_autoplay) {\n      if (!_autoplay) {\n        this.clear();\n      } else {\n        this.autoPlay();\n      }\n    }\n  },\n  computed: {\n    count: function count() {\n      return this.swipes.length;\n    },\n    delta: function delta() {\n      return this.vertical ? this.deltaY : this.deltaX;\n    },\n    size: function size() {\n      return this[this.vertical ? 'computedHeight' : 'computedWidth'];\n    },\n    trackSize: function trackSize() {\n      return this.count * this.size;\n    },\n    activeIndicator: function activeIndicator() {\n      return (this.active + this.count) % this.count;\n    },\n    trackStyle: function trackStyle() {\n      var _ref;\n\n      var mainAxis = this.vertical ? 'height' : 'width';\n      var crossAxis = this.vertical ? 'width' : 'height';\n      return _ref = {}, _defineProperty(_ref, mainAxis, \"\".concat(this.trackSize, \"px\")), _defineProperty(_ref, crossAxis, this[crossAxis] ? \"\".concat(this[crossAxis], \"px\") : ''), _defineProperty(_ref, \"transitionDuration\", \"\".concat(this.swiping ? 0 : this.duration, \"ms\")), _defineProperty(_ref, \"transform\", \"translate\".concat(this.vertical ? 'Y' : 'X', \"(\").concat(this.offset, \"px)\")), _ref;\n    }\n  },\n  methods: {\n    // initialize swipe position\n    initialize: function initialize() {\n      var active = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.initialSwipe;\n      clearTimeout(this.timer);\n\n      if (this.$el) {\n        var rect = this.$el.getBoundingClientRect();\n        this.computedWidth = this.width || rect.width;\n        this.computedHeight = this.height || rect.height;\n      }\n\n      this.swiping = true;\n      this.active = active;\n      this.offset = this.count > 1 ? -this.size * this.active : 0;\n      this.swipes.forEach(function (swipe) {\n        swipe.offset = 0;\n      });\n      this.autoPlay();\n    },\n    onResize: function onResize() {\n      this.initialize(this.activeIndicator);\n    },\n    onTouchStart: function onTouchStart(event) {\n      if (!this.touchable) return;\n      this.clear();\n      this.swiping = true;\n      this.touchStart(event);\n      this.correctPosition();\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (!this.touchable || !this.swiping) return;\n      this.touchMove(event);\n\n      if (this.vertical && this.direction === 'vertical' || this.direction === 'horizontal') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.move(0, Math.min(Math.max(this.delta, -this.size), this.size));\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (!this.touchable || !this.swiping) return;\n\n      if (this.delta) {\n        var offset = this.vertical ? this.offsetY : this.offsetX;\n        this.move(offset > 50 ? this.delta > 0 ? -1 : 1 : 0);\n      }\n\n      this.swiping = false;\n      this.autoPlay();\n    },\n    move: function move() {\n      var _move = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var delta = this.delta,\n          active = this.active,\n          count = this.count,\n          swipes = this.swipes,\n          trackSize = this.trackSize;\n      var atFirst = active === 0;\n      var atLast = active === count - 1;\n      var outOfBounds = !this.loop && (atFirst && (offset > 0 || _move < 0) || atLast && (offset < 0 || _move > 0));\n\n      if (outOfBounds || count <= 1) {\n        return;\n      }\n\n      swipes[0].offset = atLast && (delta < 0 || _move > 0) ? trackSize : 0;\n      swipes[count - 1].offset = atFirst && (delta > 0 || _move < 0) ? -trackSize : 0;\n\n      if (_move && active + _move >= -1 && active + _move <= count) {\n        this.active += _move;\n      }\n\n      this.offset = offset - this.active * this.size;\n    },\n    swipeTo: function swipeTo(index) {\n      var _this = this;\n\n      this.swiping = true;\n      this.correctPosition();\n      setTimeout(function () {\n        _this.swiping = false;\n\n        _this.move(index % _this.count - _this.active);\n      }, 30);\n    },\n    correctPosition: function correctPosition() {\n      if (this.active <= -1) {\n        this.move(this.count);\n      }\n\n      if (this.active >= this.count) {\n        this.move(-this.count);\n      }\n    },\n    clear: function clear() {\n      clearTimeout(this.timer);\n    },\n    autoPlay: function autoPlay() {\n      var _this2 = this;\n\n      var autoplay = this.autoplay;\n\n      if (autoplay && this.count > 1) {\n        this.clear();\n        this.timer = setTimeout(function () {\n          _this2.swiping = true;\n\n          _this2.resetTouchStatus();\n\n          _this2.correctPosition();\n\n          setTimeout(function () {\n            _this2.swiping = false;\n\n            _this2.move(1);\n\n            _this2.autoPlay();\n          }, 30);\n        }, autoplay);\n      }\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div :class=\"b()\">\n    <div\n      :style=\"trackStyle\"\n      :class=\"b('track')\"\n      @touchstart=\"onTouchStart\"\n      @touchmove=\"onTouchMove\"\n      @touchend=\"onTouchEnd\"\n      @touchcancel=\"onTouchEnd\"\n      @transitionend=\"$emit('change', activeIndicator)\"\n    >\n      <slot />\n    </div>\n    <slot name=\"indicator\">\n      <div\n        v-if=\"showIndicators && count > 1\"\n        :class=\"b('indicators', { vertical })\"\n      >\n        <i\n          v-for=\"index in count\"\n          :class=\"b('indicator', { active: index - 1 === activeIndicator })\"\n        />\n      </div>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport create from '../utils/create';\nimport Touch from '../mixins/touch';\nimport { on, off } from '../utils/event';\n\nexport default create({\n  name: 'swipe',\n\n  mixins: [Touch],\n\n  props: {\n    width: Number,\n    height: Number,\n    autoplay: Number,\n    vertical: Boolean,\n    loop: {\n      type: Boolean,\n      default: true\n    },\n    touchable: {\n      type: Boolean,\n      default: true\n    },\n    initialSwipe: {\n      type: Number,\n      default: 0\n    },\n    showIndicators: {\n      type: Boolean,\n      default: true\n    },\n    duration: {\n      type: Number,\n      default: 500\n    }\n  },\n\n  data() {\n    return {\n      computedWidth: 0,\n      computedHeight: 0,\n      offset: 0,\n      active: 0,\n      deltaX: 0,\n      deltaY: 0,\n      swipes: [],\n      swiping: false\n    };\n  },\n\n  mounted() {\n    this.initialize();\n\n    if (!this.$isServer) {\n      on(window, 'resize', this.onResize, true);\n    }\n  },\n\n  destroyed() {\n    this.clear();\n\n    if (!this.$isServer) {\n      off(window, 'resize', this.onResize, true);\n    }\n  },\n\n  watch: {\n    swipes() {\n      this.initialize();\n    },\n\n    initialSwipe() {\n      this.initialize();\n    },\n\n    autoplay(autoplay) {\n      if (!autoplay) {\n        this.clear();\n      } else {\n        this.autoPlay();\n      }\n    }\n  },\n\n  computed: {\n    count() {\n      return this.swipes.length;\n    },\n\n    delta() {\n      return this.vertical ? this.deltaY : this.deltaX;\n    },\n\n    size() {\n      return this[this.vertical ? 'computedHeight' : 'computedWidth'];\n    },\n\n    trackSize() {\n      return this.count * this.size;\n    },\n\n    activeIndicator() {\n      return (this.active + this.count) % this.count;\n    },\n\n    trackStyle() {\n      const mainAxis = this.vertical ? 'height' : 'width';\n      const crossAxis = this.vertical ? 'width' : 'height';\n      return {\n        [mainAxis]: `${this.trackSize}px`,\n        [crossAxis]: this[crossAxis] ? `${this[crossAxis]}px` : '',\n        transitionDuration: `${this.swiping ? 0 : this.duration}ms`,\n        transform: `translate${this.vertical ? 'Y' : 'X'}(${this.offset}px)`\n      };\n    }\n  },\n\n  methods: {\n    // initialize swipe position\n    initialize(active = this.initialSwipe) {\n      clearTimeout(this.timer);\n      if (this.$el) {\n        const rect = this.$el.getBoundingClientRect();\n        this.computedWidth = this.width || rect.width;\n        this.computedHeight = this.height || rect.height;\n      }\n      this.swiping = true;\n      this.active = active;\n      this.offset = this.count > 1 ? -this.size * this.active : 0;\n      this.swipes.forEach(swipe => {\n        swipe.offset = 0;\n      });\n      this.autoPlay();\n    },\n\n    onResize() {\n      this.initialize(this.activeIndicator);\n    },\n\n    onTouchStart(event) {\n      if (!this.touchable) return;\n\n      this.clear();\n      this.swiping = true;\n      this.touchStart(event);\n      this.correctPosition();\n    },\n\n    onTouchMove(event) {\n      if (!this.touchable || !this.swiping) return;\n\n      this.touchMove(event);\n\n      if (\n        (this.vertical && this.direction === 'vertical') ||\n        this.direction === 'horizontal'\n      ) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.move(0, Math.min(Math.max(this.delta, -this.size), this.size));\n      }\n    },\n\n    onTouchEnd() {\n      if (!this.touchable || !this.swiping) return;\n\n      if (this.delta) {\n        const offset = this.vertical ? this.offsetY : this.offsetX;\n        this.move(offset > 50 ? (this.delta > 0 ? -1 : 1) : 0);\n      }\n\n      this.swiping = false;\n      this.autoPlay();\n    },\n\n    move(move = 0, offset = 0) {\n      const { delta, active, count, swipes, trackSize } = this;\n      const atFirst = active === 0;\n      const atLast = active === count - 1;\n      const outOfBounds = !this.loop && ((atFirst && (offset > 0 || move < 0)) || (atLast && (offset < 0 || move > 0)));\n\n      if (outOfBounds || count <= 1) {\n        return;\n      }\n\n      swipes[0].offset = (atLast && (delta < 0 || move > 0)) ? trackSize : 0;\n      swipes[count - 1].offset = (atFirst && (delta > 0 || move < 0)) ? -trackSize : 0;\n\n      if (move && active + move >= -1 && active + move <= count) {\n        this.active += move;\n      }\n\n      this.offset = offset - this.active * this.size;\n    },\n\n    swipeTo(index) {\n      this.swiping = true;\n      this.correctPosition();\n      setTimeout(() => {\n        this.swiping = false;\n        this.move(index % this.count - this.active);\n      }, 30);\n    },\n\n    correctPosition() {\n      if (this.active <= -1) {\n        this.move(this.count);\n      }\n      if (this.active >= this.count) {\n        this.move(-this.count);\n      }\n    },\n\n    clear() {\n      clearTimeout(this.timer);\n    },\n\n    autoPlay() {\n      const { autoplay } = this;\n\n      if (autoplay && this.count > 1) {\n        this.clear();\n        this.timer = setTimeout(() => {\n          this.swiping = true;\n          this.resetTouchStatus();\n          this.correctPosition();\n\n          setTimeout(() => {\n            this.swiping = false;\n            this.move(1);\n            this.autoPlay();\n          }, 30);\n        }, autoplay);\n      }\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/swipe"}]}