{"remainingRequest":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js!/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js!/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/pagination/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zsy/Projects/about_me/node_modules/healen-x-ui/packages/pagination/index.vue","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zsy/Projects/about_me/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport create from '../utils/create';\nexport default create({\n  name: 'pagination',\n  props: {\n    value: Number,\n    prevText: String,\n    nextText: String,\n    pageCount: Number,\n    forceEllipses: Boolean,\n    mode: {\n      type: String,\n      default: 'multi'\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10\n    },\n    showPageSize: {\n      type: Number,\n      default: 5\n    },\n    totalItems: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    isMultiMode: function isMultiMode() {\n      return this.mode === 'multi';\n    },\n    computedPageCount: function computedPageCount() {\n      var count = this.pageCount || Math.ceil(this.totalItems / this.itemsPerPage);\n      return Math.max(1, count);\n    },\n    pageDesc: function pageDesc() {\n      return this.value + '/' + this.computedPageCount;\n    },\n    pages: function pages() {\n      var pages = [];\n      var pageCount = this.computedPageCount; // Default page limits\n\n      var startPage = 1;\n      var endPage = pageCount;\n      var isMaxSized = this.showPageSize !== undefined && this.showPageSize < pageCount; // recompute if showPageSize\n\n      if (isMaxSized) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(this.value - Math.floor(this.showPageSize / 2), 1);\n        endPage = startPage + this.showPageSize - 1; // Adjust if limit is exceeded\n\n        if (endPage > pageCount) {\n          endPage = pageCount;\n          startPage = endPage - this.showPageSize + 1;\n        }\n      } // Add page number links\n\n\n      for (var number = startPage; number <= endPage; number++) {\n        var page = this.makePage(number, number, number === this.value);\n        pages.push(page);\n      } // Add links to move between page sets\n\n\n      if (isMaxSized && this.showPageSize > 0 && this.forceEllipses) {\n        if (startPage > 1) {\n          var previousPageSet = this.makePage(startPage - 1, '...', false);\n          pages.unshift(previousPageSet);\n        }\n\n        if (endPage < pageCount) {\n          var nextPageSet = this.makePage(endPage + 1, '...', false);\n          pages.push(nextPageSet);\n        }\n      }\n\n      return pages;\n    }\n  },\n  watch: {\n    value: {\n      handler: function handler(page) {\n        this.selectPage(page || this.value);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    selectPage: function selectPage(page) {\n      page = Math.max(1, page);\n      page = Math.min(this.computedPageCount, page);\n\n      if (this.value !== page) {\n        this.$emit('input', page);\n        this.$emit('change', page);\n      }\n    },\n    makePage: function makePage(number, text, active) {\n      return {\n        number: number,\n        text: text,\n        active: active\n      };\n    }\n  }\n});",{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <ul :class=\"b({ simple: !isMultiMode })\">\n    <li\n      class=\"van-hairline\"\n      :class=\"[b('item', { disabled: value === 1 }), b('prev')]\"\n      @click=\"selectPage(value - 1)\"\n    >\n      {{ prevText || '上一页' }}\n    </li>\n    <li\n      v-if=\"isMultiMode\"\n      v-for=\"page in pages\"\n      class=\"van-hairline\"\n      :class=\"[b('item', { active: page.active }), b('page')]\"\n      @click=\"selectPage(page.number)\"\n    >\n      {{ page.text }}\n    </li>\n    <li v-if=\"!isMultiMode\" :class=\"b('page-desc')\">\n      <slot name=\"pageDesc\">{{ pageDesc }}</slot>\n    </li>\n    <li\n      class=\"van-hairline\"\n      :class=\"[b('item', { disabled: value === computedPageCount }), b('next')]\"\n      @click=\"selectPage(value + 1)\"\n    >\n      {{ nextText || '下一页' }}\n    </li>\n  </ul>\n</template>\n\n<script>\nimport create from '../utils/create';\n\nexport default create({\n  name: 'pagination',\n\n  props: {\n    value: Number,\n    prevText: String,\n    nextText: String,\n    pageCount: Number,\n    forceEllipses: Boolean,\n    mode: {\n      type: String,\n      default: 'multi'\n    },\n    itemsPerPage: {\n      type: Number,\n      default: 10\n    },\n    showPageSize: {\n      type: Number,\n      default: 5\n    },\n    totalItems: {\n      type: Number,\n      default: 0\n    }\n  },\n\n  computed: {\n    isMultiMode() {\n      return this.mode === 'multi';\n    },\n\n    computedPageCount() {\n      const count = this.pageCount || Math.ceil(this.totalItems / this.itemsPerPage);\n      return Math.max(1, count);\n    },\n\n    pageDesc() {\n      return this.value + '/' + this.computedPageCount;\n    },\n\n    pages() {\n      const pages = [];\n      const pageCount = this.computedPageCount;\n\n      // Default page limits\n      let startPage = 1;\n      let endPage = pageCount;\n      const isMaxSized = this.showPageSize !== undefined && this.showPageSize < pageCount;\n\n      // recompute if showPageSize\n      if (isMaxSized) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(this.value - Math.floor(this.showPageSize / 2), 1);\n        endPage = startPage + this.showPageSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > pageCount) {\n          endPage = pageCount;\n          startPage = endPage - this.showPageSize + 1;\n        }\n      }\n\n      // Add page number links\n      for (let number = startPage; number <= endPage; number++) {\n        const page = this.makePage(number, number, number === this.value);\n        pages.push(page);\n      }\n\n      // Add links to move between page sets\n      if (isMaxSized && this.showPageSize > 0 && this.forceEllipses) {\n        if (startPage > 1) {\n          const previousPageSet = this.makePage(startPage - 1, '...', false);\n          pages.unshift(previousPageSet);\n        }\n\n        if (endPage < pageCount) {\n          const nextPageSet = this.makePage(endPage + 1, '...', false);\n          pages.push(nextPageSet);\n        }\n      }\n\n      return pages;\n    }\n  },\n\n  watch: {\n    value: {\n      handler(page) {\n        this.selectPage(page || this.value);\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    selectPage(page) {\n      page = Math.max(1, page);\n      page = Math.min(this.computedPageCount, page);\n      if (this.value !== page) {\n        this.$emit('input', page);\n        this.$emit('change', page);\n      }\n    },\n\n    makePage(number, text, active) {\n      return { number, text, active };\n    }\n  }\n});\n</script>\n"],"sourceRoot":"node_modules/healen-x-ui/packages/pagination"}]}